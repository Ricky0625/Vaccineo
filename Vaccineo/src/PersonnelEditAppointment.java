
import classes.Appointment;
import classes.Centre;
import classes.GeneralFunction;
import classes.People;
import classes.Vaccine;
import java.awt.Color;
import java.awt.Dimension;
import java.awt.Graphics;
import java.awt.Graphics2D;
import java.awt.LayoutManager;
import java.awt.RenderingHints;
import java.awt.Toolkit;
import java.awt.event.MouseAdapter;
import java.awt.event.MouseEvent;
import java.awt.event.WindowAdapter;
import java.awt.event.WindowEvent;
import java.io.FileNotFoundException;
import java.io.IOException;
import java.text.DateFormat;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.time.LocalTime;
import java.time.format.DateTimeFormatter;
import java.util.ArrayList;
import java.util.Calendar;
import java.util.Date;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.JTable;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
/**
 *
 * @author Asus
 */
public class PersonnelEditAppointment extends javax.swing.JFrame {

    Color priColor = new Color(0, 109, 119);
    Color secColor = new Color(131, 197, 190);
    Color bgColor = new Color(237, 246, 249);
    Color errColor = new Color(238, 118, 116);

    String centreId;
    String centreName;
    String peopleId;
    String doseNum;
    boolean selectedVaccine = false;
    GeneralFunction gf = new GeneralFunction();
    Centre c = new Centre();
    People p = new People();
    Vaccine vac = new Vaccine();
    Appointment ap = new Appointment();
    ArrayList<ArrayList<String>> vaccineList, remainingVaccine, peopleList, appointmentList, centreList;
    JFrame PersonnelEditAppointment = this;

    public PersonnelEditAppointment() {
        initComponents();
        setIconImage(Toolkit.getDefaultToolkit().getImage(getClass().getResource("/images/vaccine-logo.png")));
        
        this.setDefaultCloseOperation(JFrame.DO_NOTHING_ON_CLOSE);
        addWindowListener(new WindowAdapter() {
            @Override
            public void windowClosing(WindowEvent we) {
                String ObjButtons[] = {"Yes", "No"};
                int PromptResult = JOptionPane.showOptionDialog(null, "Are you sure you want to exit?", "Vaccineo", JOptionPane.DEFAULT_OPTION, JOptionPane.WARNING_MESSAGE, null, ObjButtons, ObjButtons[1]);
                if (PromptResult == JOptionPane.YES_OPTION) {
                    Login log = new Login();
                    log.setVisible(true);
                    PersonnelEditAppointment.setVisible(false);
                }
            }
        });
    }

    public PersonnelEditAppointment(String centreId, String peopleId, String doseNum) {
        initComponents();
        setIconImage(Toolkit.getDefaultToolkit().getImage(getClass().getResource("/images/vaccine-logo.png")));
        this.centreId = centreId;
        this.peopleId = peopleId;
        this.doseNum = doseNum;
        
        this.setDefaultCloseOperation(JFrame.DO_NOTHING_ON_CLOSE);
        addWindowListener(new WindowAdapter() {
            @Override
            public void windowClosing(WindowEvent we) {
                String ObjButtons[] = {"Yes", "No"};
                int PromptResult = JOptionPane.showOptionDialog(null, "Are you sure you want to exit?", "Vaccineo", JOptionPane.DEFAULT_OPTION, JOptionPane.WARNING_MESSAGE, null, ObjButtons, ObjButtons[1]);
                if (PromptResult == JOptionPane.YES_OPTION) {
                    Login log = new Login();
                    log.setVisible(true);
                    PersonnelEditAppointment.setVisible(false);
                }
            }
        });
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        formBackground1 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        dbPanel = new javax.swing.JPanel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        logoutPanel1 = new javax.swing.JPanel();
        jLabel14 = new javax.swing.JLabel();
        jLabel15 = new javax.swing.JLabel();
        ppPanel = new javax.swing.JPanel();
        jLabel16 = new javax.swing.JLabel();
        jLabel17 = new javax.swing.JLabel();
        cnPanel = new javax.swing.JPanel();
        jLabel18 = new javax.swing.JLabel();
        jLabel19 = new javax.swing.JLabel();
        vaPanel = new javax.swing.JPanel();
        jLabel39 = new javax.swing.JLabel();
        jLabel40 = new javax.swing.JLabel();
        backBtn = new RoundedPanel(10, priColor);
        jLabel33 = new javax.swing.JLabel();
        jLabel21 = new javax.swing.JLabel();
        jLabel27 = new javax.swing.JLabel();
        jLabel29 = new javax.swing.JLabel();
        jLabel31 = new javax.swing.JLabel();
        saveBtn = new RoundedPanel(10, priColor);
        jLabel45 = new javax.swing.JLabel();
        cancelBtn = new javax.swing.JLabel();
        jLabel22 = new javax.swing.JLabel();
        jLabel30 = new javax.swing.JLabel();
        centreNameLbl = new javax.swing.JLabel();
        pplName = new javax.swing.JLabel();
        pplGender = new javax.swing.JLabel();
        pplAge = new javax.swing.JLabel();
        pplAddress = new javax.swing.JLabel();
        pplCategory = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel32 = new javax.swing.JLabel();
        scheduleDate = new com.toedter.calendar.JDateChooser();
        pplId = new javax.swing.JLabel();
        userCancelled = new javax.swing.JLabel();
        plsReschedule = new javax.swing.JLabel();
        jLabel37 = new javax.swing.JLabel();
        rescheduleBtn = new RoundedPanel(10, priColor);
        jLabel38 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        remainingVacTable = new javax.swing.JTable();
        vaccineLbl = new javax.swing.JLabel();
        vacInstruction = new javax.swing.JLabel();
        searchVac = new javax.swing.JTextField();
        vacSNLbl = new javax.swing.JLabel();
        vacSN = new javax.swing.JLabel();
        vacNameLbl = new javax.swing.JLabel();
        vacName = new javax.swing.JLabel();
        vacManuLbl = new javax.swing.JLabel();
        vacManu = new javax.swing.JLabel();
        vacDoseLbl = new javax.swing.JLabel();
        vacDose = new javax.swing.JLabel();
        jLabel42 = new javax.swing.JLabel();
        venueName = new javax.swing.JLabel();
        vacInstruction1 = new javax.swing.JLabel();
        scheduleTime = new com.github.lgooddatepicker.components.TimePicker();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setMinimumSize(new java.awt.Dimension(1440, 800));
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowOpened(java.awt.event.WindowEvent evt) {
                formWindowOpened(evt);
            }
        });

        formBackground1.setBackground(new java.awt.Color(237, 246, 249));
        formBackground1.setMaximumSize(new java.awt.Dimension(1440, 800));
        formBackground1.setPreferredSize(new java.awt.Dimension(1440, 800));

        jPanel2.setBackground(new java.awt.Color(0, 109, 119));
        jPanel2.setPreferredSize(new java.awt.Dimension(300, 800));

        jLabel2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/vaccineo-logo-big.png"))); // NOI18N
        jLabel2.setMaximumSize(new java.awt.Dimension(154, 41));
        jLabel2.setMinimumSize(new java.awt.Dimension(154, 41));

        dbPanel.setBackground(new java.awt.Color(0, 109, 119));
        dbPanel.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        dbPanel.setPreferredSize(new java.awt.Dimension(300, 65));
        dbPanel.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                dbPanelMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                dbPanelMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                dbPanelMouseExited(evt);
            }
        });

        jLabel7.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel7.setForeground(new java.awt.Color(255, 255, 255));
        jLabel7.setText("Dashboard");

        jLabel8.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/dashboard-icon.png"))); // NOI18N

        javax.swing.GroupLayout dbPanelLayout = new javax.swing.GroupLayout(dbPanel);
        dbPanel.setLayout(dbPanelLayout);
        dbPanelLayout.setHorizontalGroup(
            dbPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(dbPanelLayout.createSequentialGroup()
                .addGap(88, 88, 88)
                .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel7)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        dbPanelLayout.setVerticalGroup(
            dbPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(dbPanelLayout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addGroup(dbPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(jLabel8, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel7))
                .addContainerGap(23, Short.MAX_VALUE))
        );

        logoutPanel1.setBackground(new java.awt.Color(131, 197, 190));
        logoutPanel1.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        logoutPanel1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                logoutPanel1MouseClicked(evt);
            }
        });

        jLabel14.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel14.setForeground(new java.awt.Color(255, 255, 255));
        jLabel14.setText("Logout");

        jLabel15.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/logout-logo.png"))); // NOI18N

        javax.swing.GroupLayout logoutPanel1Layout = new javax.swing.GroupLayout(logoutPanel1);
        logoutPanel1.setLayout(logoutPanel1Layout);
        logoutPanel1Layout.setHorizontalGroup(
            logoutPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(logoutPanel1Layout.createSequentialGroup()
                .addGap(104, 104, 104)
                .addComponent(jLabel15, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel14)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        logoutPanel1Layout.setVerticalGroup(
            logoutPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(logoutPanel1Layout.createSequentialGroup()
                .addGap(22, 22, 22)
                .addGroup(logoutPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(jLabel14)
                    .addComponent(jLabel15, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(22, Short.MAX_VALUE))
        );

        ppPanel.setBackground(new java.awt.Color(0, 109, 119));
        ppPanel.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        ppPanel.setPreferredSize(new java.awt.Dimension(300, 65));
        ppPanel.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                ppPanelMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                ppPanelMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                ppPanelMouseExited(evt);
            }
        });

        jLabel16.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel16.setForeground(new java.awt.Color(255, 255, 255));
        jLabel16.setText("People");

        jLabel17.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/people-icon.png"))); // NOI18N

        javax.swing.GroupLayout ppPanelLayout = new javax.swing.GroupLayout(ppPanel);
        ppPanel.setLayout(ppPanelLayout);
        ppPanelLayout.setHorizontalGroup(
            ppPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(ppPanelLayout.createSequentialGroup()
                .addGap(88, 88, 88)
                .addComponent(jLabel17, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel16)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        ppPanelLayout.setVerticalGroup(
            ppPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(ppPanelLayout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addGroup(ppPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(jLabel17, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel16))
                .addContainerGap(23, Short.MAX_VALUE))
        );

        cnPanel.setBackground(new java.awt.Color(131, 197, 190));
        cnPanel.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        cnPanel.setPreferredSize(new java.awt.Dimension(300, 65));

        jLabel18.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel18.setForeground(new java.awt.Color(255, 255, 255));
        jLabel18.setText("Centre");

        jLabel19.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/center-logo.png"))); // NOI18N

        javax.swing.GroupLayout cnPanelLayout = new javax.swing.GroupLayout(cnPanel);
        cnPanel.setLayout(cnPanelLayout);
        cnPanelLayout.setHorizontalGroup(
            cnPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(cnPanelLayout.createSequentialGroup()
                .addGap(88, 88, 88)
                .addComponent(jLabel19, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel18)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        cnPanelLayout.setVerticalGroup(
            cnPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(cnPanelLayout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addGroup(cnPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(jLabel19, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel18))
                .addContainerGap(23, Short.MAX_VALUE))
        );

        vaPanel.setBackground(new java.awt.Color(0, 109, 119));
        vaPanel.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        vaPanel.setPreferredSize(new java.awt.Dimension(300, 65));
        vaPanel.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                vaPanelMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                vaPanelMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                vaPanelMouseExited(evt);
            }
        });

        jLabel39.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel39.setForeground(new java.awt.Color(255, 255, 255));
        jLabel39.setText("Vaccine");

        jLabel40.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/vaccine-panel.png"))); // NOI18N

        javax.swing.GroupLayout vaPanelLayout = new javax.swing.GroupLayout(vaPanel);
        vaPanel.setLayout(vaPanelLayout);
        vaPanelLayout.setHorizontalGroup(
            vaPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(vaPanelLayout.createSequentialGroup()
                .addGap(88, 88, 88)
                .addComponent(jLabel40, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel39)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        vaPanelLayout.setVerticalGroup(
            vaPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(vaPanelLayout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addGroup(vaPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(jLabel40, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel39))
                .addContainerGap(23, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(dbPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(logoutPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addContainerGap(74, Short.MAX_VALUE)
                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(73, 73, 73))
            .addComponent(ppPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(cnPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(vaPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(30, 30, 30)
                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 59, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(30, 30, 30)
                .addComponent(dbPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, 0)
                .addComponent(ppPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, 0)
                .addComponent(cnPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, 0)
                .addComponent(vaPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 351, Short.MAX_VALUE)
                .addComponent(logoutPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        backBtn.setBackground(new java.awt.Color(237, 246, 249));
        backBtn.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        backBtn.setPreferredSize(new java.awt.Dimension(58, 22));
        backBtn.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                backBtnMouseClicked(evt);
            }
        });

        jLabel33.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel33.setForeground(new java.awt.Color(255, 255, 255));
        jLabel33.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/back-btn.png"))); // NOI18N
        jLabel33.setText("Back");

        javax.swing.GroupLayout backBtnLayout = new javax.swing.GroupLayout(backBtn);
        backBtn.setLayout(backBtnLayout);
        backBtnLayout.setHorizontalGroup(
            backBtnLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(backBtnLayout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addComponent(jLabel33)
                .addGap(20, 20, 20))
        );
        backBtnLayout.setVerticalGroup(
            backBtnLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(backBtnLayout.createSequentialGroup()
                .addGap(12, 12, 12)
                .addComponent(jLabel33)
                .addGap(12, 12, 12))
        );

        jLabel21.setFont(new java.awt.Font("Tahoma", 0, 16)); // NOI18N
        jLabel21.setForeground(new java.awt.Color(0, 109, 119));
        jLabel21.setText("Name:");

        jLabel27.setFont(new java.awt.Font("Tahoma", 0, 16)); // NOI18N
        jLabel27.setForeground(new java.awt.Color(0, 109, 119));
        jLabel27.setText("Age:");

        jLabel29.setFont(new java.awt.Font("Tahoma", 0, 16)); // NOI18N
        jLabel29.setForeground(new java.awt.Color(0, 109, 119));
        jLabel29.setText("Address:");

        jLabel31.setFont(new java.awt.Font("Tahoma", 0, 16)); // NOI18N
        jLabel31.setForeground(new java.awt.Color(0, 109, 119));
        jLabel31.setText("Gender:");

        saveBtn.setBackground(new java.awt.Color(237, 246, 249));
        saveBtn.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        saveBtn.setPreferredSize(new java.awt.Dimension(58, 22));
        saveBtn.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                saveBtnMouseClicked(evt);
            }
        });

        jLabel45.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel45.setForeground(new java.awt.Color(255, 255, 255));
        jLabel45.setText("Save");

        javax.swing.GroupLayout saveBtnLayout = new javax.swing.GroupLayout(saveBtn);
        saveBtn.setLayout(saveBtnLayout);
        saveBtnLayout.setHorizontalGroup(
            saveBtnLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, saveBtnLayout.createSequentialGroup()
                .addContainerGap(29, Short.MAX_VALUE)
                .addComponent(jLabel45)
                .addGap(29, 29, 29))
        );
        saveBtnLayout.setVerticalGroup(
            saveBtnLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(saveBtnLayout.createSequentialGroup()
                .addGap(12, 12, 12)
                .addComponent(jLabel45)
                .addContainerGap(12, Short.MAX_VALUE))
        );

        cancelBtn.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        cancelBtn.setForeground(new java.awt.Color(226, 149, 120));
        cancelBtn.setText("Cancel");
        cancelBtn.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        cancelBtn.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                cancelBtnMouseClicked(evt);
            }
        });

        jLabel22.setFont(new java.awt.Font("Tahoma", 0, 16)); // NOI18N
        jLabel22.setForeground(new java.awt.Color(0, 109, 119));
        jLabel22.setText("IC/Passport:");

        jLabel30.setFont(new java.awt.Font("Tahoma", 0, 16)); // NOI18N
        jLabel30.setForeground(new java.awt.Color(0, 109, 119));
        jLabel30.setText("Category:");

        centreNameLbl.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        centreNameLbl.setForeground(new java.awt.Color(226, 149, 120));
        centreNameLbl.setText("Appointment");

        pplName.setFont(new java.awt.Font("Tahoma", 0, 16)); // NOI18N
        pplName.setForeground(new java.awt.Color(0, 109, 119));
        pplName.setText("-");

        pplGender.setFont(new java.awt.Font("Tahoma", 0, 16)); // NOI18N
        pplGender.setForeground(new java.awt.Color(0, 109, 119));
        pplGender.setText("-");

        pplAge.setFont(new java.awt.Font("Tahoma", 0, 16)); // NOI18N
        pplAge.setForeground(new java.awt.Color(0, 109, 119));
        pplAge.setText("-");

        pplAddress.setFont(new java.awt.Font("Tahoma", 0, 16)); // NOI18N
        pplAddress.setForeground(new java.awt.Color(0, 109, 119));
        pplAddress.setText("-");

        pplCategory.setFont(new java.awt.Font("Tahoma", 0, 16)); // NOI18N
        pplCategory.setForeground(new java.awt.Color(0, 109, 119));
        pplCategory.setText("-");

        jLabel4.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(226, 149, 120));
        jLabel4.setText("Schedule");

        jLabel32.setFont(new java.awt.Font("Tahoma", 0, 16)); // NOI18N
        jLabel32.setForeground(new java.awt.Color(0, 109, 119));
        jLabel32.setText("Date:");

        scheduleDate.setForeground(new java.awt.Color(0, 109, 119));
        scheduleDate.setDateFormatString("dd/MM/yyyy");
        scheduleDate.setFont(new java.awt.Font("Tahoma", 0, 16)); // NOI18N
        scheduleDate.setMaxSelectableDate(new java.util.Date(253370739663000L));
        scheduleDate.setMinSelectableDate(new java.util.Date(-62135794737000L));

        pplId.setFont(new java.awt.Font("Tahoma", 0, 16)); // NOI18N
        pplId.setForeground(new java.awt.Color(0, 109, 119));
        pplId.setText("-");

        userCancelled.setFont(new java.awt.Font("Tahoma", 1, 16)); // NOI18N
        userCancelled.setForeground(new java.awt.Color(255, 102, 102));
        userCancelled.setText("This user has cancelled the appointment.");

        plsReschedule.setFont(new java.awt.Font("Tahoma", 1, 16)); // NOI18N
        plsReschedule.setForeground(new java.awt.Color(255, 102, 102));
        plsReschedule.setText("Please reschedule.");

        jLabel37.setFont(new java.awt.Font("Tahoma", 0, 16)); // NOI18N
        jLabel37.setForeground(new java.awt.Color(0, 109, 119));
        jLabel37.setText("Time:");

        rescheduleBtn.setBackground(new java.awt.Color(237, 246, 249));
        rescheduleBtn.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        rescheduleBtn.setPreferredSize(new java.awt.Dimension(58, 22));
        rescheduleBtn.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                rescheduleBtnMouseClicked(evt);
            }
        });

        jLabel38.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel38.setForeground(new java.awt.Color(255, 255, 255));
        jLabel38.setText("Reschedule");

        javax.swing.GroupLayout rescheduleBtnLayout = new javax.swing.GroupLayout(rescheduleBtn);
        rescheduleBtn.setLayout(rescheduleBtnLayout);
        rescheduleBtnLayout.setHorizontalGroup(
            rescheduleBtnLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, rescheduleBtnLayout.createSequentialGroup()
                .addGap(12, 12, 12)
                .addComponent(jLabel38)
                .addGap(32, 32, 32))
        );
        rescheduleBtnLayout.setVerticalGroup(
            rescheduleBtnLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(rescheduleBtnLayout.createSequentialGroup()
                .addGap(12, 12, 12)
                .addComponent(jLabel38)
                .addContainerGap(12, Short.MAX_VALUE))
        );

        remainingVacTable.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        remainingVacTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {

            }
        )
        {public boolean isCellEditable(int row, int column){return false;}}
    );
    remainingVacTable.setGridColor(new java.awt.Color(0, 109, 119));
    remainingVacTable.setRowHeight(25);
    remainingVacTable.setSelectionBackground(new java.awt.Color(131, 197, 190));
    remainingVacTable.setSelectionForeground(new java.awt.Color(255, 255, 255));
    remainingVacTable.getTableHeader().setReorderingAllowed(false);
    jScrollPane1.setViewportView(remainingVacTable);

    vaccineLbl.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
    vaccineLbl.setForeground(new java.awt.Color(226, 149, 120));
    vaccineLbl.setText("Vaccine");

    vacInstruction.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
    vacInstruction.setForeground(new java.awt.Color(0, 109, 119));
    vacInstruction.setText("Double click on a row to select a vaccine for this user.");

    searchVac.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
    searchVac.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 109, 119)));
    searchVac.addKeyListener(new java.awt.event.KeyAdapter() {
        public void keyReleased(java.awt.event.KeyEvent evt) {
            searchVacKeyReleased(evt);
        }
    });

    vacSNLbl.setFont(new java.awt.Font("Tahoma", 0, 16)); // NOI18N
    vacSNLbl.setForeground(new java.awt.Color(0, 109, 119));
    vacSNLbl.setText("Serial No:");

    vacSN.setFont(new java.awt.Font("Tahoma", 0, 16)); // NOI18N
    vacSN.setForeground(new java.awt.Color(0, 109, 119));
    vacSN.setText("-");

    vacNameLbl.setFont(new java.awt.Font("Tahoma", 0, 16)); // NOI18N
    vacNameLbl.setForeground(new java.awt.Color(0, 109, 119));
    vacNameLbl.setText("Vaccine Name:");

    vacName.setFont(new java.awt.Font("Tahoma", 0, 16)); // NOI18N
    vacName.setForeground(new java.awt.Color(0, 109, 119));
    vacName.setText("-");

    vacManuLbl.setFont(new java.awt.Font("Tahoma", 0, 16)); // NOI18N
    vacManuLbl.setForeground(new java.awt.Color(0, 109, 119));
    vacManuLbl.setText("Manufacturer:");

    vacManu.setFont(new java.awt.Font("Tahoma", 0, 16)); // NOI18N
    vacManu.setForeground(new java.awt.Color(0, 109, 119));
    vacManu.setText("-");

    vacDoseLbl.setFont(new java.awt.Font("Tahoma", 0, 16)); // NOI18N
    vacDoseLbl.setForeground(new java.awt.Color(0, 109, 119));
    vacDoseLbl.setText("Dose:");

    vacDose.setFont(new java.awt.Font("Tahoma", 0, 16)); // NOI18N
    vacDose.setForeground(new java.awt.Color(0, 109, 119));
    vacDose.setText("-");

    jLabel42.setFont(new java.awt.Font("Tahoma", 0, 16)); // NOI18N
    jLabel42.setForeground(new java.awt.Color(0, 109, 119));
    jLabel42.setText("Venue:");

    venueName.setFont(new java.awt.Font("Tahoma", 0, 16)); // NOI18N
    venueName.setForeground(new java.awt.Color(0, 109, 119));
    venueName.setText("Venue");

    vacInstruction1.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
    vacInstruction1.setForeground(new java.awt.Color(0, 109, 119));
    vacInstruction1.setText("Serial No.");

    scheduleTime.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
    scheduleTime.setForeground(new java.awt.Color(0, 109, 119));

    javax.swing.GroupLayout formBackground1Layout = new javax.swing.GroupLayout(formBackground1);
    formBackground1.setLayout(formBackground1Layout);
    formBackground1Layout.setHorizontalGroup(
        formBackground1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
        .addGroup(formBackground1Layout.createSequentialGroup()
            .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
            .addGap(80, 80, 80)
            .addGroup(formBackground1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, formBackground1Layout.createSequentialGroup()
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 633, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(formBackground1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(formBackground1Layout.createSequentialGroup()
                            .addGap(19, 19, 19)
                            .addGroup(formBackground1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(vacSNLbl)
                                .addComponent(vacManuLbl)
                                .addComponent(vacNameLbl)
                                .addComponent(vacDoseLbl)))
                        .addGroup(formBackground1Layout.createSequentialGroup()
                            .addGap(18, 18, 18)
                            .addComponent(saveBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 91, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGap(18, 18, 18)
                    .addGroup(formBackground1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(formBackground1Layout.createSequentialGroup()
                            .addGroup(formBackground1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(vacName, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(vacManu, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(vacDose, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(vacSN))
                            .addGap(0, 0, Short.MAX_VALUE))
                        .addGroup(formBackground1Layout.createSequentialGroup()
                            .addComponent(cancelBtn)
                            .addContainerGap(240, Short.MAX_VALUE))))
                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, formBackground1Layout.createSequentialGroup()
                    .addGroup(formBackground1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(centreNameLbl)
                        .addGroup(formBackground1Layout.createSequentialGroup()
                            .addGroup(formBackground1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(jLabel22)
                                .addComponent(jLabel31)
                                .addComponent(jLabel29)
                                .addComponent(jLabel21)
                                .addComponent(jLabel27)
                                .addComponent(jLabel30))
                            .addGap(18, 18, 18)
                            .addGroup(formBackground1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(pplCategory, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(pplName, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(pplGender, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(pplAge, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(pplAddress, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(pplId, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(formBackground1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(jLabel4)
                        .addComponent(userCancelled)
                        .addComponent(plsReschedule)
                        .addComponent(rescheduleBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 99, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGroup(formBackground1Layout.createSequentialGroup()
                            .addGroup(formBackground1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(jLabel32)
                                .addComponent(jLabel42)
                                .addComponent(jLabel37))
                            .addGap(18, 18, 18)
                            .addGroup(formBackground1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(venueName)
                                .addComponent(scheduleDate, javax.swing.GroupLayout.DEFAULT_SIZE, 212, Short.MAX_VALUE)
                                .addComponent(scheduleTime, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                    .addGap(159, 159, 159))
                .addGroup(formBackground1Layout.createSequentialGroup()
                    .addGroup(formBackground1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(backBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 91, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGroup(formBackground1Layout.createSequentialGroup()
                            .addGroup(formBackground1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(vacInstruction)
                                .addComponent(vaccineLbl))
                            .addGap(93, 93, 93)
                            .addGroup(formBackground1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(vacInstruction1)
                                .addComponent(searchVac, javax.swing.GroupLayout.PREFERRED_SIZE, 214, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addContainerGap())))
    );
    formBackground1Layout.setVerticalGroup(
        formBackground1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
        .addGroup(formBackground1Layout.createSequentialGroup()
            .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
            .addGap(0, 0, Short.MAX_VALUE))
        .addGroup(formBackground1Layout.createSequentialGroup()
            .addGap(36, 36, 36)
            .addComponent(backBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
            .addGroup(formBackground1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                .addComponent(jLabel4)
                .addComponent(centreNameLbl))
            .addGap(20, 20, 20)
            .addGroup(formBackground1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(formBackground1Layout.createSequentialGroup()
                    .addGroup(formBackground1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel22)
                        .addComponent(pplId))
                    .addGap(18, 18, 18)
                    .addGroup(formBackground1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(jLabel21)
                        .addComponent(pplName))
                    .addGap(18, 18, 18)
                    .addGroup(formBackground1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(jLabel31)
                        .addComponent(pplGender))
                    .addGap(18, 18, 18)
                    .addGroup(formBackground1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(jLabel27)
                        .addComponent(pplAge)))
                .addGroup(formBackground1Layout.createSequentialGroup()
                    .addGroup(formBackground1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel42)
                        .addComponent(venueName))
                    .addGap(18, 18, 18)
                    .addGroup(formBackground1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(formBackground1Layout.createSequentialGroup()
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 9, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel32))
                        .addComponent(scheduleDate, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGap(18, 18, 18)
                    .addGroup(formBackground1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel37)
                        .addComponent(scheduleTime, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE))))
            .addGap(18, 18, 18)
            .addGroup(formBackground1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                .addGroup(formBackground1Layout.createSequentialGroup()
                    .addGroup(formBackground1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(jLabel29)
                        .addComponent(pplAddress))
                    .addGap(18, 18, 18)
                    .addGroup(formBackground1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(jLabel30)
                        .addComponent(pplCategory))
                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(vaccineLbl)
                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                    .addComponent(vacInstruction)
                    .addGap(18, 18, 18))
                .addGroup(formBackground1Layout.createSequentialGroup()
                    .addComponent(userCancelled)
                    .addGap(0, 0, 0)
                    .addComponent(plsReschedule)
                    .addGap(18, 18, 18)
                    .addComponent(rescheduleBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(vacInstruction1)
                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                    .addComponent(searchVac, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(12, 12, 12)))
            .addGroup(formBackground1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(formBackground1Layout.createSequentialGroup()
                    .addGroup(formBackground1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(vacSNLbl)
                        .addComponent(vacSN))
                    .addGap(18, 18, 18)
                    .addGroup(formBackground1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(vacNameLbl)
                        .addComponent(vacName))
                    .addGap(18, 18, 18)
                    .addGroup(formBackground1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(vacManuLbl)
                        .addComponent(vacManu))
                    .addGap(18, 18, 18)
                    .addGroup(formBackground1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(vacDoseLbl)
                        .addComponent(vacDose))
                    .addGroup(formBackground1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(formBackground1Layout.createSequentialGroup()
                            .addGap(94, 94, 94)
                            .addComponent(saveBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(formBackground1Layout.createSequentialGroup()
                            .addGap(105, 105, 105)
                            .addComponent(cancelBtn)))
                    .addGap(0, 0, Short.MAX_VALUE))
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))
            .addGap(29, 29, 29))
    );

    javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
    getContentPane().setLayout(layout);
    layout.setHorizontalGroup(
        layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
        .addComponent(formBackground1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
    );
    layout.setVerticalGroup(
        layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
        .addComponent(formBackground1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
    );

    pack();
    }// </editor-fold>//GEN-END:initComponents

    private void dbPanelMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_dbPanelMouseClicked
        PersonnelDashboard pd = new PersonnelDashboard();
        this.setVisible(false);
        pd.setVisible(true);
    }//GEN-LAST:event_dbPanelMouseClicked

    private void dbPanelMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_dbPanelMouseEntered
        dbPanel.setBackground(secColor);
    }//GEN-LAST:event_dbPanelMouseEntered

    private void dbPanelMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_dbPanelMouseExited
        dbPanel.setBackground(priColor);
    }//GEN-LAST:event_dbPanelMouseExited

    private void logoutPanel1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_logoutPanel1MouseClicked
        int result = JOptionPane.showConfirmDialog(null, "Are you sure you want to logout?", "Exit program", JOptionPane.ERROR_MESSAGE);
        if (result == JOptionPane.YES_OPTION) {
            Login log = new Login();

            setVisible(false);
            log.setVisible(true);
        } else {
            setDefaultCloseOperation(JFrame.DO_NOTHING_ON_CLOSE);
        }
    }//GEN-LAST:event_logoutPanel1MouseClicked

    private void ppPanelMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_ppPanelMouseClicked
        PersonnelPeopleList ppl = new PersonnelPeopleList();
        this.setVisible(false);
        ppl.setVisible(true);
    }//GEN-LAST:event_ppPanelMouseClicked

    private void ppPanelMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_ppPanelMouseEntered
        ppPanel.setBackground(secColor);
    }//GEN-LAST:event_ppPanelMouseEntered

    private void ppPanelMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_ppPanelMouseExited
        ppPanel.setBackground(priColor);
    }//GEN-LAST:event_ppPanelMouseExited

    private void vaPanelMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_vaPanelMouseClicked
        PersonnelVaccine pv = new PersonnelVaccine();
        pv.setVisible(true);
        this.setVisible(false);
    }//GEN-LAST:event_vaPanelMouseClicked

    private void vaPanelMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_vaPanelMouseEntered
        vaPanel.setBackground(secColor);
    }//GEN-LAST:event_vaPanelMouseEntered

    private void vaPanelMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_vaPanelMouseExited
        vaPanel.setBackground(priColor);
    }//GEN-LAST:event_vaPanelMouseExited

    private void backBtnMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_backBtnMouseClicked
        PersonnelViewAppointment pva = new PersonnelViewAppointment(centreName);
        pva.setVisible(true);
        this.setVisible(false);
    }//GEN-LAST:event_backBtnMouseClicked

    private void cancelBtnMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_cancelBtnMouseClicked
        PersonnelViewAppointment pva = new PersonnelViewAppointment(centreName);
        pva.setVisible(true);
        this.setVisible(false);
    }//GEN-LAST:event_cancelBtnMouseClicked

    private void searchVacKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_searchVacKeyReleased
        String searchTerm = searchVac.getText();
        gf.refreshTable(remainingVacTable);
        gf.tableLoaderStartsWith(remainingVacTable, remainingVaccine, 2, searchTerm, 3, centreId, 7, "Not Used");
    }//GEN-LAST:event_searchVacKeyReleased

    private void formWindowOpened(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowOpened
        try {
            // hide or disabled some field by default
            userCancelled.setVisible(false);
            userCancelled.setText("This user has cancelled the appointment.");
            plsReschedule.setVisible(false);
            rescheduleBtn.setEnabled(false);

            // fetch data
            vac.generateVaccineList();
            vaccineList = vac.getVaccineList();
            vac.generateRemainingVaccineList();
            remainingVaccine = vac.getRemainingVaccineList();
            p.generatePeopleList();
            peopleList = p.getPeopleList();
            c.generateCentreList();
            centreList = c.getCentreList();
            ap.generateAppointmentList();
            appointmentList = ap.getAppointmentList();

            // set appointment data
            ap.setAppointmentValue(Integer.valueOf(doseNum), peopleId);

            // get centre name and set to venue
            c.searchCentreById(centreId);
            venueName.setText(c.getCentreName());
            centreName = c.getCentreName();

            // fetch user data
            p.searchUser(peopleList, peopleId);
            pplId.setText(p.getId());
            pplName.setText(p.getName());
            pplGender.setText(p.getGender());
            pplAge.setText(Integer.toString(p.getAge()));
            pplAddress.setText(p.getAddress());
            // if non-citizen, get country only
            if("Non-citizen".equals(p.getCategory())) {
                pplAddress.setText(p.getCountry());
            }
            pplCategory.setText(p.getCategory());

            // set the schedule time
            String time = ap.getAppointmentTime();
            System.out.println(time);
            DateTimeFormatter dtf = DateTimeFormatter.ofPattern("HH:mm");
            LocalTime formattedTime = LocalTime.parse(time, dtf);

            Date appointmentDate = ap.getAppointmentDateInDate();
            Date today = new Date();
            SimpleDateFormat formatter = new SimpleDateFormat("dd/MM/yyyy");
            String appDate = formatter.format(appointmentDate);
            String todayDate = formatter.format(today);

            // check if the appointment need rescedule
            int reschedule = ap.checkAppointmentStatus(peopleId, doseNum);
            // set the value of Appointment class
            ap.setAppointmentValue(Integer.valueOf(doseNum), peopleId);

            switch (reschedule) {
                case 1 -> {
                    // need reschedule
                    // display warning msg, enabled change date
                    scheduleDate.setEnabled(true);
                    userCancelled.setVisible(true);
                    plsReschedule.setVisible(true);
                    scheduleDate.setDate(ap.getAppointmentDateInDate());
                    scheduleTime.setTime(formattedTime);
                    rescheduleBtn.setEnabled(true);

                    // don't display choose vaccine
                    searchVac.setEnabled(false);
                    remainingVacTable.setEnabled(false);

                    // disabled save btn
                    saveBtn.setEnabled(false);
                }
                case -1 -> {
                    // waiting for user to accept
                    userCancelled.setVisible(true);
                    userCancelled.setText("Waiting for user to accept.");
                    scheduleDate.setDate(ap.getAppointmentDateInDate());
                    scheduleDate.setEnabled(false);
                    scheduleTime.setTime(formattedTime);
                    scheduleTime.setEnabled(false);

                    // don't display choose vaccine
                    searchVac.setEnabled(false);
                    remainingVacTable.setEnabled(false);

                    // disabled reschedue, save and cancel btn
                    saveBtn.setEnabled(false);
                    rescheduleBtn.setVisible(false);
                }
                default -> {

                    scheduleDate.setDate(appointmentDate);
                    scheduleDate.setEnabled(false);
                    scheduleTime.setTime(formattedTime);
                    scheduleTime.setEnabled(false);
                    rescheduleBtn.setVisible(false);
                    if (appDate.equals(todayDate)) {
                        // add double click listener to the table
                        remainingVacTable.addMouseListener(new MouseAdapter() {
                            String vacSerialNum;
                            String vacId;

                            @Override
                            public void mouseClicked(MouseEvent me) {

                                if (me.getClickCount() == 2) {     // to detect doble click events
                                    JTable target = (JTable) me.getSource();
                                    int row = target.getSelectedRow(); // select a row
                                    // get the serial number
                                    vacSerialNum = (String) remainingVacTable.getValueAt(row, 2);
                                    // get the vaccine unique id
                                    vacId = (String) remainingVacTable.getValueAt(row, 1);

                                    // search the selected vaccine details
                                    vac.searchVaccineById(vaccineList, vacId);

                                    // set value for displaying the selected vaccine details
                                    vacSN.setText(vacSerialNum);
                                    vacName.setText(vac.getVacName());
                                    vacManu.setText(vac.getManufacturer());
                                    vacDose.setText(doseNum);
                                    selectedVaccine = true;

                                }
                            }
                        });

                    } else {
                        // don't display choose vaccine
                        searchVac.setEnabled(false);
                        remainingVacTable.setEnabled(false);

                        userCancelled.setVisible(true);
                        userCancelled.setText("Today is not the appointment date.");
                    }

                }

            }
            // set data
            gf.tableLoaderEqualsMore(remainingVacTable, remainingVaccine, 3, centreId, 7, "Not Used");
        } catch (FileNotFoundException | ParseException ex) {
            Logger.getLogger(PersonnelEditAppointment.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_formWindowOpened

    private void saveBtnMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_saveBtnMouseClicked
        if (selectedVaccine) {
            int response = JOptionPane.showConfirmDialog(
                    this,
                    "Please confirm your action.\nIC/Passport: " + pplId.getText() + "\nWill receive this vaccine:\nSN:" + vacSN.getText() + "\nManufacturer: " + vacManu.getText() + "\nFor Dose " + doseNum,
                    "Confirmation",
                    JOptionPane.YES_NO_OPTION
            );

            if (response == JOptionPane.YES_OPTION) {
                // prepare to update the appointment file, vaccine remaining file, people file
                // create a copy appointmentList, remainingVaccine, and peopleList (all of these are arraylist)
                ArrayList<ArrayList<String>> tempAppointment = appointmentList;
                ArrayList<ArrayList<String>> tempRemaining = remainingVaccine;
                ArrayList<ArrayList<String>> tempPeople = peopleList;

                try {
                    // Handle appointment
                    // IC/Passport;Date;Time;Centre;Status;Vaccine;Dose;Complete;Serial Number
                    // get the index of this record in the arraylist
                    int appTargetIndex = ap.getRecordIndex(peopleId, doseNum);

                    // update record
                    tempAppointment.get(appTargetIndex).set(5, vacName.getText());
                    tempAppointment.get(appTargetIndex).set(7, "Yes");
                    tempAppointment.get(appTargetIndex).set(8, vacSN.getText());

                    // at the same time, book the second appointment, if the current appointment is 1st dose
                    // Vaccine file = Id;Vaccine Name;Manufacturer;Batch Quantity;Size;Dose Needed;Expiry Duration;Waiting Period
                    // Appointment file = IC/Passport;Date;Time;Centre;Status;Vaccine;Dose;Complete;Serial Number
                    // get the waiting period
                    int waitingPeriod = vac.getWaiting();

                    // prepare today's date (added date)
                    Date today = new Date();
                    DateFormat df = new SimpleDateFormat("dd/MM/yyyy");
                    // manufactured Date equals three days before adding the batch (manufactured date)
                    Calendar secDate = Calendar.getInstance();
                    secDate.setTime(today);
                    secDate.add(Calendar.MONTH, +waitingPeriod);
                    Date secAppDate = secDate.getTime();
                    String formattedSecAppDate = df.format(secAppDate);

                    if (Integer.valueOf(doseNum) == 1) {
                        ArrayList<String> secDose = new ArrayList();
                        String record = peopleId + ";" + formattedSecAppDate + ";" + "-" + ";" + centreName + ";" + "pending" + ";" + "-" + ";" + "2" + ";" + "No" + ";" + "-";
                        secDose.add(record);

                        // add second appointment to the tempAppointment and be ready to update the file
                        tempAppointment.add(secDose);
                    }

                    // write into appointment file
                    ap.writeIntoAppointmentFile(tempAppointment);

                    /**
                     * *********Appointment file updated*************
                     */
                    // Handle remainingVaccine
                    // Batch Id;Vaccine Id;Serial Number;Centre Id;Manufactured Date;Expired Date;Added Date;Status
                    int usedVaccineIndex = vac.getRemainingRecordIndex(vacSN.getText());

                    // update record
                    tempRemaining.get(usedVaccineIndex).set(7, "Used");

                    // write into remaing vaccine file
                    vac.writeIntoVaccineQuanFile(tempRemaining);

                    /**
                     * *********Remaining Vaccine file updated*************
                     */
                    // Handle people
                    int pplTargetIndex = p.getRecordIndex(peopleId);

                    // update record
                    if (Integer.valueOf(doseNum) == 1) {
                        tempPeople.get(pplTargetIndex).set(11, "Pending 2nd Dose");
                    } else {
                        tempPeople.get(pplTargetIndex).set(11, "Fully Vaccinated");
                    }

                    // write into people file
                    p.writeIntoPeopleFile(tempPeople);

                    /**
                     * *********People file updated*************
                     */
                    JOptionPane.showMessageDialog(this, "Appointment for:\n" + pplId.getText() + " has been updated.", "Appointment updated", JOptionPane.INFORMATION_MESSAGE);

                    PersonnelViewAppointment pva = new PersonnelViewAppointment(centreName);
                    pva.setVisible(true);
                    this.setVisible(false);

                } catch (FileNotFoundException ex) {
                    Logger.getLogger(PersonnelEditAppointment.class.getName()).log(Level.SEVERE, null, ex);
                } catch (IOException ex) {
                    Logger.getLogger(PersonnelEditAppointment.class.getName()).log(Level.SEVERE, null, ex);
                }

            }
        }
    }//GEN-LAST:event_saveBtnMouseClicked

    private void rescheduleBtnMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_rescheduleBtnMouseClicked
        Date oriDate = ap.getAppointmentDateInDate();
        SimpleDateFormat formatter = new SimpleDateFormat("dd/MM/yyyy");
        String formattedOriDate = formatter.format(oriDate);

        String oriTime = ap.getAppointmentTime();

        Date newDate = scheduleDate.getDate();
        String formattedNewDate = formatter.format(newDate);

        LocalTime newTime = scheduleTime.getTime();
        DateTimeFormatter dtf = DateTimeFormatter.ofPattern("HH:mm");
        String formattedTime = newTime.format(dtf);

        if ((formattedOriDate.equals(formattedNewDate) && oriTime.equals(formattedTime))) {
            // means schedule didn't changed at all
            JOptionPane.showMessageDialog(this, "The new schedule is still the same as the previous one!", "Schedule Error", JOptionPane.WARNING_MESSAGE);
        } else {
            JOptionPane.showMessageDialog(this, "Confirm to reschedule to the new slot?\n" + formattedNewDate + " " + formattedTime, "Confirmation", JOptionPane.YES_NO_OPTION);

            try {
                int targetIndex = ap.getRecordIndex(peopleId, doseNum);

                ArrayList<ArrayList<String>> tempAppointment = appointmentList;

                // update record
                tempAppointment.get(targetIndex).set(1, formattedNewDate);
                tempAppointment.get(targetIndex).set(2, formattedTime);
                tempAppointment.get(targetIndex).set(4, "pending");

                ap.writeIntoAppointmentFile(tempAppointment);

                JOptionPane.showMessageDialog(this, "Appointment for:\n" + pplId.getText() + " has been updated.", "Appointment updated", JOptionPane.INFORMATION_MESSAGE);

                PersonnelCentreDetail pcd = new PersonnelCentreDetail(centreName);
                pcd.setVisible(true);
                this.setVisible(false);

            } catch (FileNotFoundException ex) {
                Logger.getLogger(PersonnelEditAppointment.class.getName()).log(Level.SEVERE, null, ex);
            } catch (IOException ex) {
                Logger.getLogger(PersonnelEditAppointment.class.getName()).log(Level.SEVERE, null, ex);
            }

        }


    }//GEN-LAST:event_rescheduleBtnMouseClicked

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(PersonnelEditAppointment.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(PersonnelEditAppointment.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(PersonnelEditAppointment.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(PersonnelEditAppointment.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new PersonnelEditAppointment().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel backBtn;
    private javax.swing.JLabel cancelBtn;
    private javax.swing.JLabel centreNameLbl;
    private javax.swing.JPanel cnPanel;
    private javax.swing.JPanel dbPanel;
    private javax.swing.JPanel formBackground1;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel21;
    private javax.swing.JLabel jLabel22;
    private javax.swing.JLabel jLabel27;
    private javax.swing.JLabel jLabel29;
    private javax.swing.JLabel jLabel30;
    private javax.swing.JLabel jLabel31;
    private javax.swing.JLabel jLabel32;
    private javax.swing.JLabel jLabel33;
    private javax.swing.JLabel jLabel37;
    private javax.swing.JLabel jLabel38;
    private javax.swing.JLabel jLabel39;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel40;
    private javax.swing.JLabel jLabel42;
    private javax.swing.JLabel jLabel45;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JPanel logoutPanel1;
    private javax.swing.JLabel plsReschedule;
    private javax.swing.JPanel ppPanel;
    private javax.swing.JLabel pplAddress;
    private javax.swing.JLabel pplAge;
    private javax.swing.JLabel pplCategory;
    private javax.swing.JLabel pplGender;
    private javax.swing.JLabel pplId;
    private javax.swing.JLabel pplName;
    private javax.swing.JTable remainingVacTable;
    private javax.swing.JPanel rescheduleBtn;
    private javax.swing.JPanel saveBtn;
    private com.toedter.calendar.JDateChooser scheduleDate;
    private com.github.lgooddatepicker.components.TimePicker scheduleTime;
    private javax.swing.JTextField searchVac;
    private javax.swing.JLabel userCancelled;
    private javax.swing.JPanel vaPanel;
    private javax.swing.JLabel vacDose;
    private javax.swing.JLabel vacDoseLbl;
    private javax.swing.JLabel vacInstruction;
    private javax.swing.JLabel vacInstruction1;
    private javax.swing.JLabel vacManu;
    private javax.swing.JLabel vacManuLbl;
    private javax.swing.JLabel vacName;
    private javax.swing.JLabel vacNameLbl;
    private javax.swing.JLabel vacSN;
    private javax.swing.JLabel vacSNLbl;
    private javax.swing.JLabel vaccineLbl;
    private javax.swing.JLabel venueName;
    // End of variables declaration//GEN-END:variables

    class RoundedPanel extends JPanel {

        private Color backgroundColor;
        private int cornerRadius = 15;

        public RoundedPanel(LayoutManager layout, int radius) {
            super(layout);
            cornerRadius = radius;
        }

        public RoundedPanel(LayoutManager layout, int radius, Color bgColor) {
            super(layout);
            cornerRadius = radius;
            backgroundColor = bgColor;
        }

        public RoundedPanel(int radius) {
            super();
            cornerRadius = radius;

        }

        public RoundedPanel(int radius, Color bgColor) {
            super();
            cornerRadius = radius;
            backgroundColor = bgColor;
        }

        public RoundedPanel(Color bgColor) {
            super();
            backgroundColor = bgColor;
        }

        @Override
        protected void paintComponent(Graphics g) {
            super.paintComponent(g);
            Dimension arcs = new Dimension(cornerRadius, cornerRadius);
            int width = getWidth();
            int height = getHeight();
            Graphics2D graphics = (Graphics2D) g;
            graphics.setRenderingHint(RenderingHints.KEY_ANTIALIASING, RenderingHints.VALUE_ANTIALIAS_ON);
            //Draws the rounded panel with borders.
            if (backgroundColor != null) {
                graphics.setColor(backgroundColor);
            } else {
                graphics.setColor(getBackground());
            }
            graphics.fillRoundRect(0, 0, width - 1, height - 1, arcs.width, arcs.height); //paint background
            graphics.setColor(getForeground());
//            graphics.drawRoundRect(0, 0, width-1, height-1, arcs.width, arcs.height); //paint border
//             
        }
    }

}
