
import classes.Appointment;
import classes.People;
import com.github.lgooddatepicker.components.TimePicker;
import com.github.lgooddatepicker.components.TimePickerSettings;
import com.github.lgooddatepicker.optionalusertools.PickerUtilities;
import java.awt.Color;
import java.awt.Dimension;
import java.awt.Graphics;
import java.awt.Graphics2D;
import java.awt.LayoutManager;
import java.awt.RenderingHints;
import java.awt.Toolkit;
import java.awt.event.WindowAdapter;
import java.awt.event.WindowEvent;
import java.io.FileNotFoundException;
import java.io.IOException;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.time.LocalDate;
import java.time.LocalDateTime;
import java.time.LocalTime;
import java.time.format.DateTimeFormatter;
import java.util.ArrayList;
import java.util.Calendar;
import java.util.Date;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import javax.swing.JPanel;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
/**
 *
 * @author Asus
 */
public class PersonnelAddAppointment extends javax.swing.JFrame {

    Color priColor = new Color(0, 109, 119);
    Color secColor = new Color(131, 197, 190);
    Color bgColor = new Color(237, 246, 249);
    Color errColor = new Color(238, 118, 116);

    String centreName;
    People p = new People();
    Appointment ap = new Appointment();
    ArrayList<ArrayList<String>> peopleList, appointmentList;
    JFrame PersonnelAddAppointment = this;

    public PersonnelAddAppointment() {
        initComponents();
        setIconImage(Toolkit.getDefaultToolkit().getImage(getClass().getResource("/images/vaccine-logo.png")));
        
        this.setDefaultCloseOperation(JFrame.DO_NOTHING_ON_CLOSE);
        addWindowListener(new WindowAdapter() {
            @Override
            public void windowClosing(WindowEvent we) {
                String ObjButtons[] = {"Yes", "No"};
                int PromptResult = JOptionPane.showOptionDialog(null, "Are you sure you want to exit?", "Vaccineo", JOptionPane.DEFAULT_OPTION, JOptionPane.WARNING_MESSAGE, null, ObjButtons, ObjButtons[1]);
                if (PromptResult == JOptionPane.YES_OPTION) {
                    Login log = new Login();
                    log.setVisible(true);
                    PersonnelAddAppointment.setVisible(false);
                }
            }
        });
    }

    public PersonnelAddAppointment(String centreName) {
        initComponents();
        setIconImage(Toolkit.getDefaultToolkit().getImage(getClass().getResource("/images/vaccine-logo.png")));
        this.centreName = centreName;
        
        this.setDefaultCloseOperation(JFrame.DO_NOTHING_ON_CLOSE);
        addWindowListener(new WindowAdapter() {
            @Override
            public void windowClosing(WindowEvent we) {
                String ObjButtons[] = {"Yes", "No"};
                int PromptResult = JOptionPane.showOptionDialog(null, "Are you sure you want to exit?", "Vaccineo", JOptionPane.DEFAULT_OPTION, JOptionPane.WARNING_MESSAGE, null, ObjButtons, ObjButtons[1]);
                if (PromptResult == JOptionPane.YES_OPTION) {
                    Login log = new Login();
                    log.setVisible(true);
                    PersonnelAddAppointment.setVisible(false);
                }
            }
        });
    }

    public PersonnelAddAppointment(String centreName, String pplId) {
        initComponents();
        setIconImage(Toolkit.getDefaultToolkit().getImage(getClass().getResource("/images/vaccine-logo.png")));
        this.centreName = centreName;
        peopleId.setText(pplId);
        
        this.setDefaultCloseOperation(JFrame.DO_NOTHING_ON_CLOSE);
        addWindowListener(new WindowAdapter() {
            @Override
            public void windowClosing(WindowEvent we) {
                String ObjButtons[] = {"Yes", "No"};
                int PromptResult = JOptionPane.showOptionDialog(null, "Are you sure you want to exit?", "Vaccineo", JOptionPane.DEFAULT_OPTION, JOptionPane.WARNING_MESSAGE, null, ObjButtons, ObjButtons[1]);
                if (PromptResult == JOptionPane.YES_OPTION) {
                    Login log = new Login();
                    log.setVisible(true);
                    PersonnelAddAppointment.setVisible(false);
                }
            }
        });
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        formBackground1 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        dbPanel = new javax.swing.JPanel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        logoutPanel1 = new javax.swing.JPanel();
        jLabel14 = new javax.swing.JLabel();
        jLabel15 = new javax.swing.JLabel();
        ppPanel = new javax.swing.JPanel();
        jLabel16 = new javax.swing.JLabel();
        jLabel17 = new javax.swing.JLabel();
        cnPanel = new javax.swing.JPanel();
        jLabel18 = new javax.swing.JLabel();
        jLabel19 = new javax.swing.JLabel();
        vaPanel = new javax.swing.JPanel();
        jLabel39 = new javax.swing.JLabel();
        jLabel40 = new javax.swing.JLabel();
        backBtn = new RoundedPanel(10, priColor);
        jLabel33 = new javax.swing.JLabel();
        jLabel21 = new javax.swing.JLabel();
        jLabel27 = new javax.swing.JLabel();
        jLabel29 = new javax.swing.JLabel();
        jLabel31 = new javax.swing.JLabel();
        addAppointment = new RoundedPanel(10, priColor);
        jLabel36 = new javax.swing.JLabel();
        cancelBtn = new javax.swing.JLabel();
        jLabel22 = new javax.swing.JLabel();
        peopleId = new javax.swing.JTextField();
        jLabel30 = new javax.swing.JLabel();
        centreNameLbl = new javax.swing.JLabel();
        searchId = new javax.swing.JPanel();
        jLabel34 = new javax.swing.JLabel();
        peopleName = new javax.swing.JLabel();
        peopleGender = new javax.swing.JLabel();
        peopleAge = new javax.swing.JLabel();
        peopleAddress = new javax.swing.JLabel();
        peopleCategory = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel32 = new javax.swing.JLabel();
        scheduleDate = new com.toedter.calendar.JDateChooser();
        userNotFound = new javax.swing.JLabel();
        centreNameLbl1 = new javax.swing.JLabel();
        jLabel35 = new javax.swing.JLabel();
        scheduleTime = new com.github.lgooddatepicker.components.TimePicker();
        jLabel5 = new javax.swing.JLabel();
        yesWalkIn = new javax.swing.JRadioButton();
        noWalkIn = new javax.swing.JRadioButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setMinimumSize(new java.awt.Dimension(1440, 800));
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowOpened(java.awt.event.WindowEvent evt) {
                formWindowOpened(evt);
            }
        });

        formBackground1.setBackground(new java.awt.Color(237, 246, 249));
        formBackground1.setMaximumSize(new java.awt.Dimension(1440, 800));
        formBackground1.setPreferredSize(new java.awt.Dimension(1440, 800));

        jPanel2.setBackground(new java.awt.Color(0, 109, 119));
        jPanel2.setPreferredSize(new java.awt.Dimension(300, 800));

        jLabel2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/vaccineo-logo-big.png"))); // NOI18N
        jLabel2.setMaximumSize(new java.awt.Dimension(154, 41));
        jLabel2.setMinimumSize(new java.awt.Dimension(154, 41));

        dbPanel.setBackground(new java.awt.Color(0, 109, 119));
        dbPanel.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        dbPanel.setPreferredSize(new java.awt.Dimension(300, 65));
        dbPanel.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                dbPanelMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                dbPanelMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                dbPanelMouseExited(evt);
            }
        });

        jLabel7.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel7.setForeground(new java.awt.Color(255, 255, 255));
        jLabel7.setText("Dashboard");

        jLabel8.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/dashboard-icon.png"))); // NOI18N

        javax.swing.GroupLayout dbPanelLayout = new javax.swing.GroupLayout(dbPanel);
        dbPanel.setLayout(dbPanelLayout);
        dbPanelLayout.setHorizontalGroup(
            dbPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(dbPanelLayout.createSequentialGroup()
                .addGap(88, 88, 88)
                .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel7)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        dbPanelLayout.setVerticalGroup(
            dbPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(dbPanelLayout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addGroup(dbPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(jLabel8, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel7))
                .addContainerGap(23, Short.MAX_VALUE))
        );

        logoutPanel1.setBackground(new java.awt.Color(131, 197, 190));
        logoutPanel1.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        logoutPanel1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                logoutPanel1MouseClicked(evt);
            }
        });

        jLabel14.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel14.setForeground(new java.awt.Color(255, 255, 255));
        jLabel14.setText("Logout");

        jLabel15.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/logout-logo.png"))); // NOI18N

        javax.swing.GroupLayout logoutPanel1Layout = new javax.swing.GroupLayout(logoutPanel1);
        logoutPanel1.setLayout(logoutPanel1Layout);
        logoutPanel1Layout.setHorizontalGroup(
            logoutPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(logoutPanel1Layout.createSequentialGroup()
                .addGap(104, 104, 104)
                .addComponent(jLabel15, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel14)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        logoutPanel1Layout.setVerticalGroup(
            logoutPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(logoutPanel1Layout.createSequentialGroup()
                .addGap(22, 22, 22)
                .addGroup(logoutPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(jLabel14)
                    .addComponent(jLabel15, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(22, Short.MAX_VALUE))
        );

        ppPanel.setBackground(new java.awt.Color(0, 109, 119));
        ppPanel.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        ppPanel.setPreferredSize(new java.awt.Dimension(300, 65));
        ppPanel.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                ppPanelMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                ppPanelMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                ppPanelMouseExited(evt);
            }
        });

        jLabel16.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel16.setForeground(new java.awt.Color(255, 255, 255));
        jLabel16.setText("People");

        jLabel17.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/people-icon.png"))); // NOI18N

        javax.swing.GroupLayout ppPanelLayout = new javax.swing.GroupLayout(ppPanel);
        ppPanel.setLayout(ppPanelLayout);
        ppPanelLayout.setHorizontalGroup(
            ppPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(ppPanelLayout.createSequentialGroup()
                .addGap(88, 88, 88)
                .addComponent(jLabel17, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel16)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        ppPanelLayout.setVerticalGroup(
            ppPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(ppPanelLayout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addGroup(ppPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(jLabel17, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel16))
                .addContainerGap(23, Short.MAX_VALUE))
        );

        cnPanel.setBackground(new java.awt.Color(131, 197, 190));
        cnPanel.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        cnPanel.setPreferredSize(new java.awt.Dimension(300, 65));

        jLabel18.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel18.setForeground(new java.awt.Color(255, 255, 255));
        jLabel18.setText("Centre");

        jLabel19.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/center-logo.png"))); // NOI18N

        javax.swing.GroupLayout cnPanelLayout = new javax.swing.GroupLayout(cnPanel);
        cnPanel.setLayout(cnPanelLayout);
        cnPanelLayout.setHorizontalGroup(
            cnPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(cnPanelLayout.createSequentialGroup()
                .addGap(88, 88, 88)
                .addComponent(jLabel19, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel18)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        cnPanelLayout.setVerticalGroup(
            cnPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(cnPanelLayout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addGroup(cnPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(jLabel19, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel18))
                .addContainerGap(23, Short.MAX_VALUE))
        );

        vaPanel.setBackground(new java.awt.Color(0, 109, 119));
        vaPanel.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        vaPanel.setPreferredSize(new java.awt.Dimension(300, 65));
        vaPanel.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                vaPanelMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                vaPanelMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                vaPanelMouseExited(evt);
            }
        });

        jLabel39.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel39.setForeground(new java.awt.Color(255, 255, 255));
        jLabel39.setText("Vaccine");

        jLabel40.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/vaccine-panel.png"))); // NOI18N

        javax.swing.GroupLayout vaPanelLayout = new javax.swing.GroupLayout(vaPanel);
        vaPanel.setLayout(vaPanelLayout);
        vaPanelLayout.setHorizontalGroup(
            vaPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(vaPanelLayout.createSequentialGroup()
                .addGap(88, 88, 88)
                .addComponent(jLabel40, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel39)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        vaPanelLayout.setVerticalGroup(
            vaPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(vaPanelLayout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addGroup(vaPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(jLabel40, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel39))
                .addContainerGap(23, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(dbPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(logoutPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addContainerGap(74, Short.MAX_VALUE)
                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(73, 73, 73))
            .addComponent(ppPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(cnPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(vaPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(30, 30, 30)
                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 59, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(30, 30, 30)
                .addComponent(dbPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, 0)
                .addComponent(ppPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, 0)
                .addComponent(cnPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, 0)
                .addComponent(vaPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 351, Short.MAX_VALUE)
                .addComponent(logoutPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        backBtn.setBackground(new java.awt.Color(237, 246, 249));
        backBtn.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        backBtn.setPreferredSize(new java.awt.Dimension(58, 22));
        backBtn.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                backBtnMouseClicked(evt);
            }
        });

        jLabel33.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel33.setForeground(new java.awt.Color(255, 255, 255));
        jLabel33.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/back-btn.png"))); // NOI18N
        jLabel33.setText("Back");

        javax.swing.GroupLayout backBtnLayout = new javax.swing.GroupLayout(backBtn);
        backBtn.setLayout(backBtnLayout);
        backBtnLayout.setHorizontalGroup(
            backBtnLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(backBtnLayout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addComponent(jLabel33)
                .addGap(20, 20, 20))
        );
        backBtnLayout.setVerticalGroup(
            backBtnLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(backBtnLayout.createSequentialGroup()
                .addGap(12, 12, 12)
                .addComponent(jLabel33)
                .addGap(12, 12, 12))
        );

        jLabel21.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel21.setForeground(new java.awt.Color(0, 109, 119));
        jLabel21.setText("Name:");

        jLabel27.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel27.setForeground(new java.awt.Color(0, 109, 119));
        jLabel27.setText("Age:");

        jLabel29.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel29.setForeground(new java.awt.Color(0, 109, 119));
        jLabel29.setText("Address:");

        jLabel31.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel31.setForeground(new java.awt.Color(0, 109, 119));
        jLabel31.setText("Gender:");

        addAppointment.setBackground(new java.awt.Color(237, 246, 249));
        addAppointment.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        addAppointment.setPreferredSize(new java.awt.Dimension(58, 22));
        addAppointment.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                addAppointmentMouseClicked(evt);
            }
        });

        jLabel36.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel36.setForeground(new java.awt.Color(255, 255, 255));
        jLabel36.setText("Add");

        javax.swing.GroupLayout addAppointmentLayout = new javax.swing.GroupLayout(addAppointment);
        addAppointment.setLayout(addAppointmentLayout);
        addAppointmentLayout.setHorizontalGroup(
            addAppointmentLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, addAppointmentLayout.createSequentialGroup()
                .addContainerGap(31, Short.MAX_VALUE)
                .addComponent(jLabel36)
                .addGap(32, 32, 32))
        );
        addAppointmentLayout.setVerticalGroup(
            addAppointmentLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(addAppointmentLayout.createSequentialGroup()
                .addGap(12, 12, 12)
                .addComponent(jLabel36)
                .addContainerGap(12, Short.MAX_VALUE))
        );

        cancelBtn.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        cancelBtn.setForeground(new java.awt.Color(226, 149, 120));
        cancelBtn.setText("Cancel");
        cancelBtn.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        cancelBtn.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                cancelBtnMouseClicked(evt);
            }
        });

        jLabel22.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel22.setForeground(new java.awt.Color(0, 109, 119));
        jLabel22.setText("IC/Passport:");

        peopleId.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        peopleId.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                peopleIdKeyPressed(evt);
            }
        });

        jLabel30.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel30.setForeground(new java.awt.Color(0, 109, 119));
        jLabel30.setText("Category:");

        centreNameLbl.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        centreNameLbl.setForeground(new java.awt.Color(226, 149, 120));
        centreNameLbl.setText("Add New Appointment");

        searchId.setBackground(new java.awt.Color(0, 109, 119));
        searchId.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        searchId.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                searchIdMouseClicked(evt);
            }
        });

        jLabel34.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/search_white.png"))); // NOI18N

        javax.swing.GroupLayout searchIdLayout = new javax.swing.GroupLayout(searchId);
        searchId.setLayout(searchIdLayout);
        searchIdLayout.setHorizontalGroup(
            searchIdLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(searchIdLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel34)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        searchIdLayout.setVerticalGroup(
            searchIdLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(searchIdLayout.createSequentialGroup()
                .addGap(8, 8, 8)
                .addComponent(jLabel34)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        peopleName.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        peopleName.setForeground(new java.awt.Color(0, 109, 119));
        peopleName.setText("-");

        peopleGender.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        peopleGender.setForeground(new java.awt.Color(0, 109, 119));
        peopleGender.setText("-");

        peopleAge.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        peopleAge.setForeground(new java.awt.Color(0, 109, 119));
        peopleAge.setText("-");

        peopleAddress.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        peopleAddress.setForeground(new java.awt.Color(0, 109, 119));
        peopleAddress.setText("-");

        peopleCategory.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        peopleCategory.setForeground(new java.awt.Color(0, 109, 119));
        peopleCategory.setText("-");

        jLabel4.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(226, 149, 120));
        jLabel4.setText("Schedule");

        jLabel32.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel32.setForeground(new java.awt.Color(0, 109, 119));
        jLabel32.setText("Choose Date:");

        scheduleDate.setForeground(new java.awt.Color(0, 109, 119));
        scheduleDate.setDateFormatString("dd/MM/yyyy");
        scheduleDate.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        scheduleDate.setMaxSelectableDate(new java.util.Date(253370739663000L));
        scheduleDate.setMinSelectableDate(new java.util.Date(-62135794737000L));

        userNotFound.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        userNotFound.setForeground(new java.awt.Color(255, 102, 102));
        userNotFound.setText("User not found!");

        centreNameLbl1.setFont(new java.awt.Font("Tahoma", 1, 36)); // NOI18N
        centreNameLbl1.setForeground(new java.awt.Color(0, 109, 119));
        centreNameLbl1.setText("Centre Name");

        jLabel35.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel35.setForeground(new java.awt.Color(0, 109, 119));
        jLabel35.setText("Choose Time:");

        scheduleTime.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        scheduleTime.setForeground(new java.awt.Color(0, 109, 119));

        jLabel5.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(0, 109, 119));
        jLabel5.setText("Is this a walk-in appointment?");

        buttonGroup1.add(yesWalkIn);
        yesWalkIn.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        yesWalkIn.setForeground(new java.awt.Color(0, 109, 119));
        yesWalkIn.setText("Yes");

        buttonGroup1.add(noWalkIn);
        noWalkIn.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        noWalkIn.setForeground(new java.awt.Color(0, 109, 119));
        noWalkIn.setText("No");

        javax.swing.GroupLayout formBackground1Layout = new javax.swing.GroupLayout(formBackground1);
        formBackground1.setLayout(formBackground1Layout);
        formBackground1Layout.setHorizontalGroup(
            formBackground1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(formBackground1Layout.createSequentialGroup()
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(80, 80, 80)
                .addGroup(formBackground1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(backBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 91, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(formBackground1Layout.createSequentialGroup()
                        .addComponent(addAppointment, javax.swing.GroupLayout.PREFERRED_SIZE, 91, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(64, 64, 64)
                        .addComponent(cancelBtn))
                    .addComponent(centreNameLbl)
                    .addGroup(formBackground1Layout.createSequentialGroup()
                        .addGroup(formBackground1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel22)
                            .addComponent(jLabel31)
                            .addComponent(jLabel29)
                            .addComponent(jLabel21)
                            .addComponent(jLabel27)
                            .addComponent(jLabel30))
                        .addGap(18, 18, 18)
                        .addGroup(formBackground1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(peopleCategory)
                            .addComponent(peopleName)
                            .addGroup(formBackground1Layout.createSequentialGroup()
                                .addComponent(peopleId, javax.swing.GroupLayout.PREFERRED_SIZE, 255, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(0, 0, 0)
                                .addComponent(searchId, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(userNotFound))
                            .addComponent(peopleGender)
                            .addComponent(peopleAge)
                            .addComponent(peopleAddress)))
                    .addComponent(jLabel4)
                    .addComponent(centreNameLbl1)
                    .addGroup(formBackground1Layout.createSequentialGroup()
                        .addGroup(formBackground1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, formBackground1Layout.createSequentialGroup()
                                .addComponent(jLabel32)
                                .addGap(18, 18, 18))
                            .addGroup(formBackground1Layout.createSequentialGroup()
                                .addComponent(jLabel35)
                                .addGap(15, 15, 15)))
                        .addGroup(formBackground1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(scheduleTime, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(scheduleDate, javax.swing.GroupLayout.DEFAULT_SIZE, 212, Short.MAX_VALUE))
                        .addGap(109, 109, 109)
                        .addGroup(formBackground1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel5)
                            .addGroup(formBackground1Layout.createSequentialGroup()
                                .addComponent(yesWalkIn)
                                .addGap(18, 18, 18)
                                .addComponent(noWalkIn)))))
                .addContainerGap(340, Short.MAX_VALUE))
        );
        formBackground1Layout.setVerticalGroup(
            formBackground1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(formBackground1Layout.createSequentialGroup()
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
            .addGroup(formBackground1Layout.createSequentialGroup()
                .addGap(72, 72, 72)
                .addComponent(backBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(34, 34, 34)
                .addComponent(centreNameLbl1)
                .addGap(18, 18, 18)
                .addComponent(centreNameLbl)
                .addGroup(formBackground1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(formBackground1Layout.createSequentialGroup()
                        .addGap(20, 20, 20)
                        .addGroup(formBackground1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(formBackground1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(jLabel22)
                                .addComponent(peopleId, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(searchId, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)))
                    .addGroup(formBackground1Layout.createSequentialGroup()
                        .addGap(25, 25, 25)
                        .addComponent(userNotFound)))
                .addGap(18, 18, 18)
                .addGroup(formBackground1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel21)
                    .addComponent(peopleName))
                .addGap(18, 18, 18)
                .addGroup(formBackground1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel31)
                    .addComponent(peopleGender))
                .addGap(18, 18, 18)
                .addGroup(formBackground1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel27)
                    .addComponent(peopleAge))
                .addGap(18, 18, 18)
                .addGroup(formBackground1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel29)
                    .addComponent(peopleAddress))
                .addGap(18, 18, 18)
                .addGroup(formBackground1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel30)
                    .addComponent(peopleCategory))
                .addGap(42, 42, 42)
                .addComponent(jLabel4)
                .addGroup(formBackground1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(formBackground1Layout.createSequentialGroup()
                        .addGap(20, 20, 20)
                        .addGroup(formBackground1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                            .addComponent(scheduleDate, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel32))
                        .addGap(33, 33, 33))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, formBackground1Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel5)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(formBackground1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(yesWalkIn)
                            .addComponent(noWalkIn))
                        .addGap(17, 17, 17)))
                .addGroup(formBackground1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel35)
                    .addComponent(scheduleTime, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(30, 30, 30)
                .addGroup(formBackground1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(addAppointment, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(formBackground1Layout.createSequentialGroup()
                        .addGap(14, 14, 14)
                        .addComponent(cancelBtn)))
                .addGap(99, 99, 99))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(formBackground1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(formBackground1, javax.swing.GroupLayout.PREFERRED_SIZE, 801, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void dbPanelMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_dbPanelMouseClicked
        PersonnelDashboard pd = new PersonnelDashboard();
        this.setVisible(false);
        pd.setVisible(true);
    }//GEN-LAST:event_dbPanelMouseClicked

    private void dbPanelMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_dbPanelMouseEntered
        dbPanel.setBackground(secColor);
    }//GEN-LAST:event_dbPanelMouseEntered

    private void dbPanelMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_dbPanelMouseExited
        dbPanel.setBackground(priColor);
    }//GEN-LAST:event_dbPanelMouseExited

    private void logoutPanel1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_logoutPanel1MouseClicked
        int result = JOptionPane.showConfirmDialog(null, "Are you sure you want to logout?", "Exit program", JOptionPane.ERROR_MESSAGE);
        if (result == JOptionPane.YES_OPTION) {
            Login log = new Login();

            setVisible(false);
            log.setVisible(true);
        } else {
            setDefaultCloseOperation(JFrame.DO_NOTHING_ON_CLOSE);
        }
    }//GEN-LAST:event_logoutPanel1MouseClicked

    private void ppPanelMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_ppPanelMouseClicked
        PersonnelPeopleList ppl = new PersonnelPeopleList();
        this.setVisible(false);
        ppl.setVisible(true);
    }//GEN-LAST:event_ppPanelMouseClicked

    private void ppPanelMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_ppPanelMouseEntered
        ppPanel.setBackground(secColor);
    }//GEN-LAST:event_ppPanelMouseEntered

    private void ppPanelMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_ppPanelMouseExited
        ppPanel.setBackground(priColor);
    }//GEN-LAST:event_ppPanelMouseExited

    private void backBtnMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_backBtnMouseClicked
        PersonnelCentreDetail pcd = new PersonnelCentreDetail(centreName);
        pcd.setVisible(true);
        this.setVisible(false);
    }//GEN-LAST:event_backBtnMouseClicked

    private void cancelBtnMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_cancelBtnMouseClicked
        PersonnelCentreDetail pcd = new PersonnelCentreDetail(centreName);
        pcd.setVisible(true);
        this.setVisible(false);
    }//GEN-LAST:event_cancelBtnMouseClicked

    private void vaPanelMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_vaPanelMouseEntered
        vaPanel.setBackground(secColor);
    }//GEN-LAST:event_vaPanelMouseEntered

    private void vaPanelMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_vaPanelMouseExited
        vaPanel.setBackground(priColor);
    }//GEN-LAST:event_vaPanelMouseExited

    private void vaPanelMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_vaPanelMouseClicked
        PersonnelVaccine pv = new PersonnelVaccine();
        pv.setVisible(true);
        this.setVisible(false);
    }//GEN-LAST:event_vaPanelMouseClicked

    private void formWindowOpened(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowOpened
        try {
            centreNameLbl1.setText(centreName);
            userNotFound.setVisible(false);

            ap.generateAppointmentList();
            appointmentList = ap.getAppointmentList();

            p.generatePeopleList();
            peopleList = p.getPeopleList();

            Date today = new Date();
            Calendar afterThreeMonths = Calendar.getInstance();
            afterThreeMonths.setTime(today);
            afterThreeMonths.add(Calendar.MONTH, +2);
            Date after3 = afterThreeMonths.getTime();

            scheduleDate.setMinSelectableDate(today);
            scheduleDate.setMaxSelectableDate(after3);

            noWalkIn.setSelected(true);

            String formattedDate = new SimpleDateFormat("dd/MM/yyyy").format(after3);
            //System.out.println(formattedDate);
        } catch (FileNotFoundException ex) {
            Logger.getLogger(PersonnelAddAppointment.class.getName()).log(Level.SEVERE, null, ex);
        }


    }//GEN-LAST:event_formWindowOpened

    private void searchIdMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_searchIdMouseClicked
        String id = peopleId.getText();
        boolean peopleExist = p.searchUserById(peopleList, id);
        boolean appointmentExist;

        if (peopleExist) {
            try {
                p.searchUser(peopleList, id);
                appointmentExist = ap.checkNoDate(1, p.getId());
                if (appointmentExist) {
                    // set the labels value
                    peopleName.setText(p.getName());
                    peopleGender.setText(p.getGender());
                    peopleAge.setText(Integer.toString(p.getAge()));
                    peopleAddress.setText(p.getAddress());
                    peopleCategory.setText(p.getCategory());
                } else {
                    peopleName.setText("-");
                    peopleGender.setText("-");
                    peopleAge.setText("-");
                    peopleAddress.setText("-");
                    peopleCategory.setText("-");
                    userNotFound.setVisible(true);
                    userNotFound.setText("This user already has an appointment.");

                    // prompt personnel to let them to view the people profile
                    int result = JOptionPane.showConfirmDialog(null, "This user already has an appointment. Do you want to view it?", "Appointment Existed", JOptionPane.YES_NO_OPTION);
                    if (result == 0) {
                        PersonnelPeople pp = new PersonnelPeople(id);
                        pp.setVisible(true);
                        this.setVisible(false);
                    }
                }
            } catch (FileNotFoundException | ParseException ex) {
                Logger.getLogger(PersonnelAddAppointment.class.getName()).log(Level.SEVERE, null, ex);
            }
        } else {
            // reset the label values
            userNotFound.setVisible(true);
            peopleName.setText("-");
            peopleGender.setText("-");
            peopleAge.setText("-");
            peopleAddress.setText("-");
            peopleCategory.setText("-");
        }
    }//GEN-LAST:event_searchIdMouseClicked

    private void peopleIdKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_peopleIdKeyPressed
        userNotFound.setVisible(false);
    }//GEN-LAST:event_peopleIdKeyPressed

    private void addAppointmentMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_addAppointmentMouseClicked
        // IC/Passport;Date;Time;Centre;Status;Vaccine;Dose;Complete;Serial Number
        // id
        String id = peopleId.getText();
        // appointment date
        Date appDate = scheduleDate.getDate();
        SimpleDateFormat formatter = new SimpleDateFormat("dd/MM/yyyy");
        String formattedAppDate = formatter.format(appDate);
        // appointment time
        LocalTime time = scheduleTime.getTime();
        DateTimeFormatter dtf = DateTimeFormatter.ofPattern("HH:mm");
        String formattedTime = time.format(dtf);
        // centre name
        String centreName = centreNameLbl1.getText();
        // dose will always be 1 because add appointment only work if that user don't have any appointment
        int dose = 1;
        String completed = "No";

        // validation
        if (userNotFound.isVisible() == true) {
            JOptionPane.showMessageDialog(this, "Please search the user using the id first!", "Empty records", JOptionPane.WARNING_MESSAGE);
        } else if (formattedAppDate.isEmpty() || formattedTime.isEmpty()) {
            JOptionPane.showMessageDialog(this, "Please choose the date and time for the appointment!", "Empty date and time", JOptionPane.WARNING_MESSAGE);
        } else {
            // add appointment
            int response = JOptionPane.showConfirmDialog(this, "Confirm to add new appointment for:\n" + peopleName.getText() + " at " + centreName + "?", "Confirmation", JOptionPane.YES_NO_OPTION);

            if (response == JOptionPane.YES_OPTION) {

                // check if this is a walk in appointment
                if (yesWalkIn.isSelected()) {
                    try {
                        // create a copy of the ori arraylist
                        ArrayList<ArrayList<String>> tempAppointment = appointmentList;

                        // IC/Passport;Date;Time;Centre;Status;Vaccine;Dose;Complete;Serial Number
                        // prepare data to write into file
                        ArrayList<String> newAppointment = new ArrayList();
                        String record = id + ";" + formattedAppDate + ";" + formattedTime + ";" + centreName + ";" + "accepted" + ";" + "-" + ";" + Integer.toString(dose) + ";" + "No" + ";" + "-";
                        newAppointment.add(record);

                        // append new record to the arraylist
                        tempAppointment.add(newAppointment);
                        //System.out.println(tempCentre);

                        // write into file
                        ap.writeIntoAppointmentFile(tempAppointment);

                        JOptionPane.showMessageDialog(this, "Added new appointment for: " + id, "Appointment added", JOptionPane.INFORMATION_MESSAGE);
                        
                        PersonnelCentreDetail pcd = new PersonnelCentreDetail(centreName);
                        pcd.setVisible(true);
                        this.setVisible(false);
                    } catch (IOException ex) {
                        Logger.getLogger(PersonnelAddAppointment.class.getName()).log(Level.SEVERE, null, ex);
                    }
                } else {
                    try {
                        // create a copy of the ori arraylist
                        ArrayList<ArrayList<String>> tempAppointment = appointmentList;

                        // IC/Passport;Date;Time;Centre;Status;Vaccine;Dose;Complete;Serial Number
                        // prepare data to write into file
                        ArrayList<String> newAppointment = new ArrayList();
                        String record = id + ";" + formattedAppDate + ";" + formattedTime + ";" + centreName + ";" + "pending" + ";" + "-" + ";" + Integer.toString(dose) + ";" + "No" + ";" + "-";
                        newAppointment.add(record);

                        // append new record to the arraylist
                        tempAppointment.add(newAppointment);
                        //System.out.println(tempCentre);

                        // write into file
                        ap.writeIntoAppointmentFile(tempAppointment);

                        JOptionPane.showMessageDialog(this, "Added new appointment for: " + id, "Appointment added", JOptionPane.INFORMATION_MESSAGE);
                        
                        PersonnelCentreDetail pcd = new PersonnelCentreDetail(centreName);
                        pcd.setVisible(true);
                        this.setVisible(false);
                    } catch (IOException ex) {
                        Logger.getLogger(PersonnelAddAppointment.class.getName()).log(Level.SEVERE, null, ex);
                    }
                }
            }
        }


    }//GEN-LAST:event_addAppointmentMouseClicked

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(PersonnelAddAppointment.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(PersonnelAddAppointment.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(PersonnelAddAppointment.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(PersonnelAddAppointment.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new PersonnelAddAppointment().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel addAppointment;
    private javax.swing.JPanel backBtn;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.JLabel cancelBtn;
    private javax.swing.JLabel centreNameLbl;
    private javax.swing.JLabel centreNameLbl1;
    private javax.swing.JPanel cnPanel;
    private javax.swing.JPanel dbPanel;
    private javax.swing.JPanel formBackground1;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel21;
    private javax.swing.JLabel jLabel22;
    private javax.swing.JLabel jLabel27;
    private javax.swing.JLabel jLabel29;
    private javax.swing.JLabel jLabel30;
    private javax.swing.JLabel jLabel31;
    private javax.swing.JLabel jLabel32;
    private javax.swing.JLabel jLabel33;
    private javax.swing.JLabel jLabel34;
    private javax.swing.JLabel jLabel35;
    private javax.swing.JLabel jLabel36;
    private javax.swing.JLabel jLabel39;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel40;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel logoutPanel1;
    private javax.swing.JRadioButton noWalkIn;
    private javax.swing.JLabel peopleAddress;
    private javax.swing.JLabel peopleAge;
    private javax.swing.JLabel peopleCategory;
    private javax.swing.JLabel peopleGender;
    private javax.swing.JTextField peopleId;
    private javax.swing.JLabel peopleName;
    private javax.swing.JPanel ppPanel;
    private com.toedter.calendar.JDateChooser scheduleDate;
    private com.github.lgooddatepicker.components.TimePicker scheduleTime;
    private javax.swing.JPanel searchId;
    private javax.swing.JLabel userNotFound;
    private javax.swing.JPanel vaPanel;
    private javax.swing.JRadioButton yesWalkIn;
    // End of variables declaration//GEN-END:variables

    class RoundedPanel extends JPanel {

        private Color backgroundColor;
        private int cornerRadius = 15;

        public RoundedPanel(LayoutManager layout, int radius) {
            super(layout);
            cornerRadius = radius;
        }

        public RoundedPanel(LayoutManager layout, int radius, Color bgColor) {
            super(layout);
            cornerRadius = radius;
            backgroundColor = bgColor;
        }

        public RoundedPanel(int radius) {
            super();
            cornerRadius = radius;

        }

        public RoundedPanel(int radius, Color bgColor) {
            super();
            cornerRadius = radius;
            backgroundColor = bgColor;
        }

        public RoundedPanel(Color bgColor) {
            super();
            backgroundColor = bgColor;
        }

        @Override
        protected void paintComponent(Graphics g) {
            super.paintComponent(g);
            Dimension arcs = new Dimension(cornerRadius, cornerRadius);
            int width = getWidth();
            int height = getHeight();
            Graphics2D graphics = (Graphics2D) g;
            graphics.setRenderingHint(RenderingHints.KEY_ANTIALIASING, RenderingHints.VALUE_ANTIALIAS_ON);
            //Draws the rounded panel with borders.
            if (backgroundColor != null) {
                graphics.setColor(backgroundColor);
            } else {
                graphics.setColor(getBackground());
            }
            graphics.fillRoundRect(0, 0, width - 1, height - 1, arcs.width, arcs.height); //paint background
            graphics.setColor(getForeground());
//            graphics.drawRoundRect(0, 0, width-1, height-1, arcs.width, arcs.height); //paint border
//             
        }
    }
}
