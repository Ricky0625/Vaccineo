
import classes.People;
import java.awt.Color;
import java.awt.Dimension;
import java.awt.Graphics;
import java.awt.Graphics2D;
import java.awt.LayoutManager;
import java.awt.RenderingHints;
import java.awt.Toolkit;
import java.awt.event.KeyEvent;
import java.awt.event.WindowAdapter;
import java.awt.event.WindowEvent;
import java.io.FileNotFoundException;
import java.io.IOException;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Date;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.JTextField;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
/**
 *
 * @author Asus
 */
public class PersonnelEditPeople extends javax.swing.JFrame {

    Color priColor = new Color(0, 109, 119);
    Color secColor = new Color(131, 197, 190);
    Color bgColor = new Color(237, 246, 249);
    Color errColor = new Color(238, 118, 116);

    String id;
    String category;
    People ppl = new People();
    ArrayList<ArrayList<String>> peopleList;

    JFrame PersonnelEditPeople = this;

    public PersonnelEditPeople() {
        initComponents();
        setIconImage(Toolkit.getDefaultToolkit().getImage(getClass().getResource("/images/vaccine-logo.png")));

        this.setDefaultCloseOperation(JFrame.DO_NOTHING_ON_CLOSE);
        addWindowListener(new WindowAdapter() {
            @Override
            public void windowClosing(WindowEvent we) {
                String ObjButtons[] = { "Yes", "No" };
                int PromptResult = JOptionPane.showOptionDialog(null, "Are you sure you want to exit?", "Vaccineo",
                        JOptionPane.DEFAULT_OPTION, JOptionPane.WARNING_MESSAGE, null, ObjButtons, ObjButtons[1]);
                if (PromptResult == JOptionPane.YES_OPTION) {
                    Login log = new Login();
                    log.setVisible(true);
                    PersonnelEditPeople.setVisible(false);
                }
            }
        });
    }

    public PersonnelEditPeople(String pplId) {
        initComponents();
        setIconImage(Toolkit.getDefaultToolkit().getImage(getClass().getResource("/images/vaccine-logo.png")));
        this.id = pplId;

        this.setDefaultCloseOperation(JFrame.DO_NOTHING_ON_CLOSE);
        addWindowListener(new WindowAdapter() {
            @Override
            public void windowClosing(WindowEvent we) {
                String ObjButtons[] = { "Yes", "No" };
                int PromptResult = JOptionPane.showOptionDialog(null, "Are you sure you want to exit?", "Vaccineo",
                        JOptionPane.DEFAULT_OPTION, JOptionPane.WARNING_MESSAGE, null, ObjButtons, ObjButtons[1]);
                if (PromptResult == JOptionPane.YES_OPTION) {
                    Login log = new Login();
                    log.setVisible(true);
                    PersonnelEditPeople.setVisible(false);
                }
            }
        });
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jTextField3 = new javax.swing.JTextField();
        genderBtnGroup = new javax.swing.ButtonGroup();
        formBackground = new javax.swing.JPanel();
        jLabel4 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel15 = new javax.swing.JLabel();
        streetLbl = new javax.swing.JLabel();
        postcodeLbl = new javax.swing.JLabel();
        jLabel18 = new javax.swing.JLabel();
        citizenCountryLbl = new javax.swing.JLabel();
        stateLbl = new javax.swing.JLabel();
        btnBtn = new RoundedPanel(10, priColor);
        jLabel33 = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        dbPanel = new javax.swing.JPanel();
        jLabel3 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        logoutPanel = new javax.swing.JPanel();
        jLabel5 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        ppPanel = new javax.swing.JPanel();
        jLabel10 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        cnPanel = new javax.swing.JPanel();
        jLabel12 = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        vaPanel = new javax.swing.JPanel();
        jLabel14 = new javax.swing.JLabel();
        jLabel21 = new javax.swing.JLabel();
        pplNameTf = new javax.swing.JTextField();
        pplStreetTf = new javax.swing.JTextField();
        pplStateTf = new javax.swing.JTextField();
        pplPostcodeTf = new javax.swing.JTextField();
        pplDOB = new com.toedter.calendar.JDateChooser();
        maleBtn = new javax.swing.JRadioButton();
        femaleBtn = new javax.swing.JRadioButton();
        citizenCountryTf = new javax.swing.JLabel();
        savePeopleInfo = new RoundedPanel(10, priColor);
        jLabel34 = new javax.swing.JLabel();
        nonCitizenCountryLbl = new javax.swing.JLabel();
        nonCitizenCountryTf = new javax.swing.JTextField();
        savePeopleInfo1 = new javax.swing.JPanel();
        jLabel35 = new javax.swing.JLabel();

        jTextField3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField3ActionPerformed(evt);
            }
        });

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setSize(new java.awt.Dimension(0, 0));
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowOpened(java.awt.event.WindowEvent evt) {
                formWindowOpened(evt);
            }
        });

        formBackground.setBackground(new java.awt.Color(237, 246, 249));
        formBackground.setMaximumSize(new java.awt.Dimension(1440, 800));
        formBackground.setPreferredSize(new java.awt.Dimension(1440, 800));

        jLabel4.setFont(new java.awt.Font("Tahoma", 1, 36)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(0, 109, 119));
        jLabel4.setText("People");

        jLabel8.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel8.setForeground(new java.awt.Color(0, 109, 119));
        jLabel8.setText("Name");

        jLabel15.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel15.setForeground(new java.awt.Color(0, 109, 119));
        jLabel15.setText("DOB");

        streetLbl.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        streetLbl.setForeground(new java.awt.Color(0, 109, 119));
        streetLbl.setText("Street");

        postcodeLbl.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        postcodeLbl.setForeground(new java.awt.Color(0, 109, 119));
        postcodeLbl.setText("Postcode");

        jLabel18.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel18.setForeground(new java.awt.Color(0, 109, 119));
        jLabel18.setText("Gender");

        citizenCountryLbl.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        citizenCountryLbl.setForeground(new java.awt.Color(0, 109, 119));
        citizenCountryLbl.setText("Country");

        stateLbl.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        stateLbl.setForeground(new java.awt.Color(0, 109, 119));
        stateLbl.setText("State");

        btnBtn.setBackground(new java.awt.Color(237, 246, 249));
        btnBtn.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnBtn.setPreferredSize(new java.awt.Dimension(58, 22));
        btnBtn.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnBtnMouseClicked(evt);
            }
        });

        jLabel33.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel33.setForeground(new java.awt.Color(255, 255, 255));
        jLabel33.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/back-btn.png"))); // NOI18N
        jLabel33.setText("Back");

        javax.swing.GroupLayout btnBtnLayout = new javax.swing.GroupLayout(btnBtn);
        btnBtn.setLayout(btnBtnLayout);
        btnBtnLayout.setHorizontalGroup(
            btnBtnLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(btnBtnLayout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addComponent(jLabel33)
                .addGap(20, 20, 20))
        );
        btnBtnLayout.setVerticalGroup(
            btnBtnLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(btnBtnLayout.createSequentialGroup()
                .addGap(12, 12, 12)
                .addComponent(jLabel33)
                .addGap(12, 12, 12))
        );

        jPanel1.setBackground(new java.awt.Color(0, 109, 119));
        jPanel1.setPreferredSize(new java.awt.Dimension(300, 800));

        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/vaccineo-logo-big.png"))); // NOI18N
        jLabel1.setMaximumSize(new java.awt.Dimension(154, 41));
        jLabel1.setMinimumSize(new java.awt.Dimension(154, 41));

        dbPanel.setBackground(new java.awt.Color(0, 109, 119));
        dbPanel.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        dbPanel.setPreferredSize(new java.awt.Dimension(300, 65));
        dbPanel.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                dbPanelMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                dbPanelMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                dbPanelMouseExited(evt);
            }
        });

        jLabel3.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(255, 255, 255));
        jLabel3.setText("Dashboard");

        jLabel6.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/dashboard-icon.png"))); // NOI18N

        javax.swing.GroupLayout dbPanelLayout = new javax.swing.GroupLayout(dbPanel);
        dbPanel.setLayout(dbPanelLayout);
        dbPanelLayout.setHorizontalGroup(
            dbPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(dbPanelLayout.createSequentialGroup()
                .addGap(88, 88, 88)
                .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel3)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        dbPanelLayout.setVerticalGroup(
            dbPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(dbPanelLayout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addGroup(dbPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(jLabel6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel3))
                .addContainerGap(23, Short.MAX_VALUE))
        );

        logoutPanel.setBackground(new java.awt.Color(131, 197, 190));
        logoutPanel.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        logoutPanel.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                logoutPanelMouseClicked(evt);
            }
        });

        jLabel5.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(255, 255, 255));
        jLabel5.setText("Logout");

        jLabel9.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/logout-logo.png"))); // NOI18N

        javax.swing.GroupLayout logoutPanelLayout = new javax.swing.GroupLayout(logoutPanel);
        logoutPanel.setLayout(logoutPanelLayout);
        logoutPanelLayout.setHorizontalGroup(
            logoutPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(logoutPanelLayout.createSequentialGroup()
                .addGap(104, 104, 104)
                .addComponent(jLabel9, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel5)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        logoutPanelLayout.setVerticalGroup(
            logoutPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(logoutPanelLayout.createSequentialGroup()
                .addGap(22, 22, 22)
                .addGroup(logoutPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(jLabel5)
                    .addComponent(jLabel9, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(22, Short.MAX_VALUE))
        );

        ppPanel.setBackground(new java.awt.Color(131, 197, 190));
        ppPanel.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        ppPanel.setPreferredSize(new java.awt.Dimension(300, 65));
        ppPanel.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                ppPanelMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                ppPanelMouseExited(evt);
            }
        });

        jLabel10.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel10.setForeground(new java.awt.Color(255, 255, 255));
        jLabel10.setText("People");

        jLabel11.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/people-icon.png"))); // NOI18N

        javax.swing.GroupLayout ppPanelLayout = new javax.swing.GroupLayout(ppPanel);
        ppPanel.setLayout(ppPanelLayout);
        ppPanelLayout.setHorizontalGroup(
            ppPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(ppPanelLayout.createSequentialGroup()
                .addGap(88, 88, 88)
                .addComponent(jLabel11, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel10)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        ppPanelLayout.setVerticalGroup(
            ppPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(ppPanelLayout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addGroup(ppPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(jLabel11, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel10))
                .addContainerGap(23, Short.MAX_VALUE))
        );

        cnPanel.setBackground(new java.awt.Color(0, 109, 119));
        cnPanel.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        cnPanel.setPreferredSize(new java.awt.Dimension(300, 65));
        cnPanel.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                cnPanelMouseClicked(evt);
            }
        });

        jLabel12.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel12.setForeground(new java.awt.Color(255, 255, 255));
        jLabel12.setText("Centre");

        jLabel13.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/center-logo.png"))); // NOI18N

        javax.swing.GroupLayout cnPanelLayout = new javax.swing.GroupLayout(cnPanel);
        cnPanel.setLayout(cnPanelLayout);
        cnPanelLayout.setHorizontalGroup(
            cnPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(cnPanelLayout.createSequentialGroup()
                .addGap(88, 88, 88)
                .addComponent(jLabel13, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel12)
                .addContainerGap(127, Short.MAX_VALUE))
        );
        cnPanelLayout.setVerticalGroup(
            cnPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(cnPanelLayout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addGroup(cnPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(jLabel13, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel12))
                .addContainerGap(23, Short.MAX_VALUE))
        );

        vaPanel.setBackground(new java.awt.Color(0, 109, 119));
        vaPanel.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        vaPanel.setPreferredSize(new java.awt.Dimension(300, 65));
        vaPanel.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                vaPanelMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                vaPanelMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                vaPanelMouseExited(evt);
            }
        });

        jLabel14.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel14.setForeground(new java.awt.Color(255, 255, 255));
        jLabel14.setText("Vaccine");

        jLabel21.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/vaccine-panel.png"))); // NOI18N

        javax.swing.GroupLayout vaPanelLayout = new javax.swing.GroupLayout(vaPanel);
        vaPanel.setLayout(vaPanelLayout);
        vaPanelLayout.setHorizontalGroup(
            vaPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(vaPanelLayout.createSequentialGroup()
                .addGap(88, 88, 88)
                .addComponent(jLabel21, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel14)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        vaPanelLayout.setVerticalGroup(
            vaPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(vaPanelLayout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addGroup(vaPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(jLabel21, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel14))
                .addContainerGap(23, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(dbPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(logoutPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap(74, Short.MAX_VALUE)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(73, 73, 73))
            .addComponent(ppPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(cnPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(vaPanel, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(30, 30, 30)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 59, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(30, 30, 30)
                .addComponent(dbPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, 0)
                .addComponent(ppPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, 0)
                .addComponent(cnPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, 0)
                .addComponent(vaPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 351, Short.MAX_VALUE)
                .addComponent(logoutPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        pplNameTf.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        pplNameTf.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                pplNameTfKeyTyped(evt);
            }
        });

        pplStreetTf.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N

        pplStateTf.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        pplStateTf.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                pplStateTfKeyTyped(evt);
            }
        });

        pplPostcodeTf.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        pplPostcodeTf.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                pplPostcodeTfKeyTyped(evt);
            }
        });

        pplDOB.setDateFormatString("dd/MM/yyyy");
        pplDOB.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N

        genderBtnGroup.add(maleBtn);
        maleBtn.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        maleBtn.setForeground(new java.awt.Color(0, 109, 119));
        maleBtn.setText("Male");
        maleBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                maleBtnActionPerformed(evt);
            }
        });

        genderBtnGroup.add(femaleBtn);
        femaleBtn.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        femaleBtn.setForeground(new java.awt.Color(0, 109, 119));
        femaleBtn.setText("Female");

        citizenCountryTf.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        citizenCountryTf.setForeground(new java.awt.Color(0, 109, 119));
        citizenCountryTf.setText("Malaysia");

        savePeopleInfo.setBackground(new java.awt.Color(237, 246, 249));
        savePeopleInfo.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        savePeopleInfo.setPreferredSize(new java.awt.Dimension(58, 22));
        savePeopleInfo.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                savePeopleInfoMouseClicked(evt);
            }
        });

        jLabel34.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel34.setForeground(new java.awt.Color(255, 255, 255));
        jLabel34.setText("Save");

        javax.swing.GroupLayout savePeopleInfoLayout = new javax.swing.GroupLayout(savePeopleInfo);
        savePeopleInfo.setLayout(savePeopleInfoLayout);
        savePeopleInfoLayout.setHorizontalGroup(
            savePeopleInfoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, savePeopleInfoLayout.createSequentialGroup()
                .addContainerGap(29, Short.MAX_VALUE)
                .addComponent(jLabel34)
                .addGap(29, 29, 29))
        );
        savePeopleInfoLayout.setVerticalGroup(
            savePeopleInfoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(savePeopleInfoLayout.createSequentialGroup()
                .addGap(12, 12, 12)
                .addComponent(jLabel34)
                .addContainerGap(12, Short.MAX_VALUE))
        );

        nonCitizenCountryLbl.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        nonCitizenCountryLbl.setForeground(new java.awt.Color(0, 109, 119));
        nonCitizenCountryLbl.setText("Country");

        nonCitizenCountryTf.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        nonCitizenCountryTf.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                nonCitizenCountryTfKeyTyped(evt);
            }
        });

        savePeopleInfo1.setBackground(new java.awt.Color(237, 246, 249));
        savePeopleInfo1.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        savePeopleInfo1.setPreferredSize(new java.awt.Dimension(58, 22));
        savePeopleInfo1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                savePeopleInfo1MouseClicked(evt);
            }
        });

        jLabel35.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel35.setForeground(new java.awt.Color(226, 149, 120));
        jLabel35.setText("Cancel");
        jLabel35.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));

        javax.swing.GroupLayout savePeopleInfo1Layout = new javax.swing.GroupLayout(savePeopleInfo1);
        savePeopleInfo1.setLayout(savePeopleInfo1Layout);
        savePeopleInfo1Layout.setHorizontalGroup(
            savePeopleInfo1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, savePeopleInfo1Layout.createSequentialGroup()
                .addContainerGap(23, Short.MAX_VALUE)
                .addComponent(jLabel35)
                .addGap(23, 23, 23))
        );
        savePeopleInfo1Layout.setVerticalGroup(
            savePeopleInfo1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(savePeopleInfo1Layout.createSequentialGroup()
                .addGap(12, 12, 12)
                .addComponent(jLabel35)
                .addContainerGap(12, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout formBackgroundLayout = new javax.swing.GroupLayout(formBackground);
        formBackground.setLayout(formBackgroundLayout);
        formBackgroundLayout.setHorizontalGroup(
            formBackgroundLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(formBackgroundLayout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(80, 80, 80)
                .addGroup(formBackgroundLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btnBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 91, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel4)
                    .addComponent(pplStreetTf, javax.swing.GroupLayout.PREFERRED_SIZE, 585, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(formBackgroundLayout.createSequentialGroup()
                        .addGroup(formBackgroundLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(pplDOB, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 340, Short.MAX_VALUE)
                            .addComponent(pplNameTf, javax.swing.GroupLayout.Alignment.LEADING))
                        .addGap(41, 41, 41)
                        .addGroup(formBackgroundLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(formBackgroundLayout.createSequentialGroup()
                                .addComponent(maleBtn)
                                .addGap(18, 18, 18)
                                .addComponent(femaleBtn))
                            .addComponent(jLabel18)
                            .addComponent(nonCitizenCountryLbl)
                            .addComponent(nonCitizenCountryTf, javax.swing.GroupLayout.PREFERRED_SIZE, 322, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(formBackgroundLayout.createSequentialGroup()
                        .addGroup(formBackgroundLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(postcodeLbl)
                            .addComponent(pplPostcodeTf, javax.swing.GroupLayout.PREFERRED_SIZE, 357, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(44, 44, 44)
                        .addGroup(formBackgroundLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(citizenCountryTf)
                            .addComponent(citizenCountryLbl)))
                    .addGroup(formBackgroundLayout.createSequentialGroup()
                        .addComponent(savePeopleInfo, javax.swing.GroupLayout.PREFERRED_SIZE, 91, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(30, 30, 30)
                        .addComponent(savePeopleInfo1, javax.swing.GroupLayout.PREFERRED_SIZE, 91, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(formBackgroundLayout.createSequentialGroup()
                        .addGroup(formBackgroundLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(streetLbl)
                            .addComponent(jLabel15)
                            .addComponent(jLabel8))
                        .addGap(575, 575, 575)
                        .addGroup(formBackgroundLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(stateLbl)
                            .addComponent(pplStateTf, javax.swing.GroupLayout.PREFERRED_SIZE, 280, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(112, Short.MAX_VALUE))
        );
        formBackgroundLayout.setVerticalGroup(
            formBackgroundLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(formBackgroundLayout.createSequentialGroup()
                .addGap(61, 61, 61)
                .addComponent(btnBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(34, 34, 34)
                .addComponent(jLabel4)
                .addGap(20, 20, 20)
                .addGroup(formBackgroundLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(jLabel18)
                    .addComponent(jLabel8))
                .addGap(8, 8, 8)
                .addGroup(formBackgroundLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(maleBtn)
                    .addComponent(pplNameTf, javax.swing.GroupLayout.PREFERRED_SIZE, 54, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(femaleBtn))
                .addGap(27, 27, 27)
                .addGroup(formBackgroundLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(jLabel15)
                    .addComponent(nonCitizenCountryLbl))
                .addGap(8, 8, 8)
                .addGroup(formBackgroundLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(pplDOB, javax.swing.GroupLayout.PREFERRED_SIZE, 54, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(nonCitizenCountryTf, javax.swing.GroupLayout.PREFERRED_SIZE, 54, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(formBackgroundLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(streetLbl)
                    .addComponent(stateLbl))
                .addGap(8, 8, 8)
                .addGroup(formBackgroundLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(pplStateTf, javax.swing.GroupLayout.DEFAULT_SIZE, 54, Short.MAX_VALUE)
                    .addComponent(pplStreetTf))
                .addGap(21, 21, 21)
                .addGroup(formBackgroundLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(postcodeLbl)
                    .addComponent(citizenCountryLbl))
                .addGap(8, 8, 8)
                .addGroup(formBackgroundLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(pplPostcodeTf, javax.swing.GroupLayout.PREFERRED_SIZE, 54, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(citizenCountryTf))
                .addGap(18, 18, 18)
                .addGroup(formBackgroundLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(savePeopleInfo, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(savePeopleInfo1, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)))
            .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(formBackground, javax.swing.GroupLayout.DEFAULT_SIZE, 1402, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(formBackground, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(0, 0, 0))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void dbPanelMouseEntered(java.awt.event.MouseEvent evt) {// GEN-FIRST:event_dbPanelMouseEntered
        dbPanel.setBackground(secColor);
    }// GEN-LAST:event_dbPanelMouseEntered

    private void dbPanelMouseExited(java.awt.event.MouseEvent evt) {// GEN-FIRST:event_dbPanelMouseExited
        dbPanel.setBackground(priColor);
    }// GEN-LAST:event_dbPanelMouseExited

    private void ppPanelMouseEntered(java.awt.event.MouseEvent evt) {// GEN-FIRST:event_ppPanelMouseEntered
        ppPanel.setBackground(secColor);
    }// GEN-LAST:event_ppPanelMouseEntered

    private void ppPanelMouseExited(java.awt.event.MouseEvent evt) {// GEN-FIRST:event_ppPanelMouseExited
        ppPanel.setBackground(priColor);
    }// GEN-LAST:event_ppPanelMouseExited

    private void jTextField3ActionPerformed(java.awt.event.ActionEvent evt) {// GEN-FIRST:event_jTextField3ActionPerformed
        // TODO add your handling code here:
    }// GEN-LAST:event_jTextField3ActionPerformed

    private void maleBtnActionPerformed(java.awt.event.ActionEvent evt) {// GEN-FIRST:event_maleBtnActionPerformed
        // TODO add your handling code here:
    }// GEN-LAST:event_maleBtnActionPerformed

    private void vaPanelMouseEntered(java.awt.event.MouseEvent evt) {// GEN-FIRST:event_vaPanelMouseEntered
        vaPanel.setBackground(secColor);
    }// GEN-LAST:event_vaPanelMouseEntered

    private void vaPanelMouseExited(java.awt.event.MouseEvent evt) {// GEN-FIRST:event_vaPanelMouseExited
        vaPanel.setBackground(priColor);
    }// GEN-LAST:event_vaPanelMouseExited

    private void dbPanelMouseClicked(java.awt.event.MouseEvent evt) {// GEN-FIRST:event_dbPanelMouseClicked
        PersonnelDashboard pd = new PersonnelDashboard();
        this.setVisible(false);
        pd.setVisible(true);
    }// GEN-LAST:event_dbPanelMouseClicked

    private void cnPanelMouseClicked(java.awt.event.MouseEvent evt) {// GEN-FIRST:event_cnPanelMouseClicked
        PersonnelCentre pc = new PersonnelCentre();
        this.setVisible(false);
        pc.setVisible(true);
    }// GEN-LAST:event_cnPanelMouseClicked

    private void vaPanelMouseClicked(java.awt.event.MouseEvent evt) {// GEN-FIRST:event_vaPanelMouseClicked
        PersonnelVaccine pv = new PersonnelVaccine();
        this.setVisible(false);
        pv.setVisible(true);
    }// GEN-LAST:event_vaPanelMouseClicked

    private void logoutPanelMouseClicked(java.awt.event.MouseEvent evt) {// GEN-FIRST:event_logoutPanelMouseClicked
        int result = JOptionPane.showConfirmDialog(null, "Are you sure you want to logout?", "Exit program",
                JOptionPane.ERROR_MESSAGE);
        if (result == JOptionPane.YES_OPTION) {
            Login log = new Login();

            setVisible(false);
            log.setVisible(true);
        } else {
            setDefaultCloseOperation(JFrame.DO_NOTHING_ON_CLOSE);
        }
    }// GEN-LAST:event_logoutPanelMouseClicked

    private void formWindowOpened(java.awt.event.WindowEvent evt) {// GEN-FIRST:event_formWindowOpened

        String gender;
        nonCitizenCountryLbl.setVisible(false);
        nonCitizenCountryTf.setVisible(false);
        citizenCountryLbl.setVisible(false);
        citizenCountryTf.setVisible(false);

        try {
            ppl.generatePeopleList();
            peopleList = ppl.getPeopleList();
            // System.out.println(peopleList);
            ppl.searchUser(peopleList, id);
            pplNameTf.setText(ppl.getName());
            pplDOB.setDate(ppl.getDOBinDate());
            pplStreetTf.setText(ppl.getStreet());
            pplStateTf.setText(ppl.getState());
            pplPostcodeTf.setText(ppl.getPostcode());
            category = ppl.getCategory();
            gender = ppl.getGender();

            switch (category) {
                case "Citizen":
                    citizenCountryLbl.setVisible(true);
                    citizenCountryTf.setVisible(true);
                    citizenCountryTf.setText(ppl.getCountry());
                    break;
                case "Non-citizen":
                    nonCitizenCountryLbl.setVisible(true);
                    nonCitizenCountryTf.setVisible(true);
                    nonCitizenCountryTf.setText(ppl.getCountry());
                    streetLbl.setVisible(false);
                    pplStreetTf.setVisible(false);
                    stateLbl.setVisible(false);
                    pplStateTf.setVisible(false);
                    postcodeLbl.setVisible(false);
                    pplPostcodeTf.setVisible(false);
                    break;
            }

            switch (gender) {
                case "Male":
                    maleBtn.setSelected(true);
                    break;
                case "Female":
                    femaleBtn.setSelected(true);
                    break;
            }

        } catch (FileNotFoundException ex) {
            Logger.getLogger(PersonnelPeopleList.class.getName()).log(Level.SEVERE, null, ex);
        }

        // ppl.searchUser(peopleList, id);

    }// GEN-LAST:event_formWindowOpened

    private void savePeopleInfoMouseClicked(java.awt.event.MouseEvent evt) {// GEN-FIRST:event_savePeopleInfoMouseClicked
        String name = pplNameTf.getText();
        String gender;
        if (femaleBtn.isSelected()) {
            gender = "Female";
        } else {
            gender = "Male";
        }
        Date dob = pplDOB.getDate();
        SimpleDateFormat formatter = new SimpleDateFormat("dd/MM/yyyy");
        String dobDate = formatter.format(dob);
        String street = pplStreetTf.getText();
        String state = pplStateTf.getText();
        String postcode = pplPostcodeTf.getText();
        String citiCountry = citizenCountryTf.getText();
        String noncitiCountry = nonCitizenCountryTf.getText();

        // check if the current user if citizen or non-citizen
        switch (category) {
            case ("Citizen"):

                // check if the textfields are empty or not
                if (name.isEmpty() || gender.isEmpty() || dobDate.isEmpty() || street.isEmpty() || state.isEmpty()
                        || postcode.isEmpty()) {
                    JOptionPane.showMessageDialog(this, "Please fill in all the fields!", "Empty fields",
                            JOptionPane.WARNING_MESSAGE);
                } else {
                    try {
                        // get the index of the current record in the arraylist
                        int targetIndex = ppl.getRecordIndex(id);

                        // create a copy of the arraylist
                        ArrayList<ArrayList<String>> tempPeople = peopleList;

                        // modify the record in the arraylist
                        // Username;Password;IC/Passport;Name;DOB;Address;State;Country;Postcode;Gender;Category;Vaccination
                        // Status
                        tempPeople.get(targetIndex).set(3, name);
                        tempPeople.get(targetIndex).set(4, dobDate);
                        tempPeople.get(targetIndex).set(5, street);
                        tempPeople.get(targetIndex).set(6, state);
                        tempPeople.get(targetIndex).set(7, citiCountry);
                        tempPeople.get(targetIndex).set(8, postcode);
                        tempPeople.get(targetIndex).set(9, gender);
                        tempPeople.get(targetIndex).set(10, category);

                        // write into file
                        ppl.writeIntoPeopleFile(tempPeople);

                        JOptionPane.showMessageDialog(this, "Successfully edited.", "People info edited",
                                JOptionPane.INFORMATION_MESSAGE);

                        // return back to people profile
                        PersonnelPeople pp = new PersonnelPeople(id);
                        pp.setVisible(true);
                        this.setVisible(false);

                    } catch (FileNotFoundException ex) {
                        Logger.getLogger(PersonnelEditPeople.class.getName()).log(Level.SEVERE, null, ex);
                    } catch (IOException ex) {
                        Logger.getLogger(PersonnelEditPeople.class.getName()).log(Level.SEVERE, null, ex);
                    }

                }

                break;
            case ("Non-citizen"):

                // check if the textfields are empty or not
                if (name.isEmpty() || gender.isEmpty() || dobDate.isEmpty() || noncitiCountry.isEmpty()) {
                    JOptionPane.showMessageDialog(this, "Please fill in all the fields!", "Empty fields",
                            JOptionPane.WARNING_MESSAGE);
                } else {
                    try {
                        // get the index of the current record in the arraylist
                        int targetIndex = ppl.getRecordIndex(id);

                        // create a copy of the arraylist
                        ArrayList<ArrayList<String>> tempPeople = peopleList;

                        // modify the record in the arraylist
                        // Username;Password;IC/Passport;Name;DOB;Address;State;Country;Postcode;Gender;Category;Vaccination
                        // Status
                        tempPeople.get(targetIndex).set(3, name);
                        tempPeople.get(targetIndex).set(4, dobDate);
                        tempPeople.get(targetIndex).set(5, "-");
                        tempPeople.get(targetIndex).set(6, "-");
                        tempPeople.get(targetIndex).set(7, noncitiCountry);
                        tempPeople.get(targetIndex).set(8, "-");
                        tempPeople.get(targetIndex).set(9, gender);
                        tempPeople.get(targetIndex).set(10, category);

                        // write into file
                        ppl.writeIntoPeopleFile(tempPeople);

                        JOptionPane.showMessageDialog(this, "Successfully edited.", "People info edited",
                                JOptionPane.INFORMATION_MESSAGE);

                        // return back to people profile
                        PersonnelPeople pp = new PersonnelPeople(id);
                        pp.setVisible(true);
                        this.setVisible(false);

                    } catch (FileNotFoundException ex) {
                        Logger.getLogger(PersonnelEditPeople.class.getName()).log(Level.SEVERE, null, ex);
                    } catch (IOException ex) {
                        Logger.getLogger(PersonnelEditPeople.class.getName()).log(Level.SEVERE, null, ex);
                    }

                }

                break;
        }

    }// GEN-LAST:event_savePeopleInfoMouseClicked

    private void savePeopleInfo1MouseClicked(java.awt.event.MouseEvent evt) {// GEN-FIRST:event_savePeopleInfo1MouseClicked
        // TODO add your handling code here:
    }// GEN-LAST:event_savePeopleInfo1MouseClicked

    private void btnBtnMouseClicked(java.awt.event.MouseEvent evt) {// GEN-FIRST:event_btnBtnMouseClicked
        PersonnelPeople pp = new PersonnelPeople(id);
        pp.setVisible(true);
        this.setVisible(false);
    }// GEN-LAST:event_btnBtnMouseClicked

    private void pplPostcodeTfKeyTyped(java.awt.event.KeyEvent evt) {// GEN-FIRST:event_pplPostcodeTfKeyTyped
        char nums = evt.getKeyChar();
        if (!(Character.isDigit(nums) || (nums == KeyEvent.VK_BACK_SPACE) || (nums == KeyEvent.VK_DELETE))) {
            evt.consume();
        }
    }// GEN-LAST:event_pplPostcodeTfKeyTyped

    private void pplStateTfKeyTyped(java.awt.event.KeyEvent evt) {// GEN-FIRST:event_pplStateTfKeyTyped
        char nums = evt.getKeyChar();
        if (!(Character.isAlphabetic(nums) || (nums == KeyEvent.VK_BACK_SPACE) || (nums == KeyEvent.VK_DELETE))) {
            evt.consume();
        }
    }// GEN-LAST:event_pplStateTfKeyTyped

    private void nonCitizenCountryTfKeyTyped(java.awt.event.KeyEvent evt) {// GEN-FIRST:event_nonCitizenCountryTfKeyTyped
        char nums = evt.getKeyChar();
        if (!(Character.isAlphabetic(nums) || (nums == KeyEvent.VK_BACK_SPACE) || (nums == KeyEvent.VK_DELETE)
                || (nums == KeyEvent.VK_SPACE))) {
            evt.consume();
        }
    }// GEN-LAST:event_nonCitizenCountryTfKeyTyped

    private void pplNameTfKeyTyped(java.awt.event.KeyEvent evt) {// GEN-FIRST:event_pplNameTfKeyTyped
        char nums = evt.getKeyChar();
        if (!(Character.isAlphabetic(nums) || (nums == KeyEvent.VK_BACK_SPACE) || (nums == KeyEvent.VK_DELETE)
                || (nums == KeyEvent.VK_SPACE))) {
            evt.consume();
        }
    }// GEN-LAST:event_pplNameTfKeyTyped

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        // <editor-fold defaultstate="collapsed" desc=" Look and feel setting code
        // (optional) ">
        /*
         * If Nimbus (introduced in Java SE 6) is not available, stay with the default
         * look and feel.
         * For details see
         * http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(PersonnelEditPeople.class.getName()).log(java.util.logging.Level.SEVERE,
                    null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(PersonnelEditPeople.class.getName()).log(java.util.logging.Level.SEVERE,
                    null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(PersonnelEditPeople.class.getName()).log(java.util.logging.Level.SEVERE,
                    null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(PersonnelEditPeople.class.getName()).log(java.util.logging.Level.SEVERE,
                    null, ex);
        }
        // </editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new PersonnelEditPeople().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel btnBtn;
    private javax.swing.JLabel citizenCountryLbl;
    private javax.swing.JLabel citizenCountryTf;
    private javax.swing.JPanel cnPanel;
    private javax.swing.JPanel dbPanel;
    private javax.swing.JRadioButton femaleBtn;
    private javax.swing.JPanel formBackground;
    private javax.swing.ButtonGroup genderBtnGroup;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel21;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel33;
    private javax.swing.JLabel jLabel34;
    private javax.swing.JLabel jLabel35;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JTextField jTextField3;
    private javax.swing.JPanel logoutPanel;
    private javax.swing.JRadioButton maleBtn;
    private javax.swing.JLabel nonCitizenCountryLbl;
    private javax.swing.JTextField nonCitizenCountryTf;
    private javax.swing.JLabel postcodeLbl;
    private javax.swing.JPanel ppPanel;
    private com.toedter.calendar.JDateChooser pplDOB;
    private javax.swing.JTextField pplNameTf;
    private javax.swing.JTextField pplPostcodeTf;
    private javax.swing.JTextField pplStateTf;
    private javax.swing.JTextField pplStreetTf;
    private javax.swing.JPanel savePeopleInfo;
    private javax.swing.JPanel savePeopleInfo1;
    private javax.swing.JLabel stateLbl;
    private javax.swing.JLabel streetLbl;
    private javax.swing.JPanel vaPanel;
    // End of variables declaration//GEN-END:variables

    class RoundedPanel extends JPanel {

        private Color backgroundColor;
        private int cornerRadius = 15;

        public RoundedPanel(LayoutManager layout, int radius) {
            super(layout);
            cornerRadius = radius;
        }

        public RoundedPanel(LayoutManager layout, int radius, Color bgColor) {
            super(layout);
            cornerRadius = radius;
            backgroundColor = bgColor;
        }

        public RoundedPanel(int radius) {
            super();
            cornerRadius = radius;

        }

        public RoundedPanel(int radius, Color bgColor) {
            super();
            cornerRadius = radius;
            backgroundColor = bgColor;
        }

        public RoundedPanel(Color bgColor) {
            super();
            backgroundColor = bgColor;
        }

        @Override
        protected void paintComponent(Graphics g) {
            super.paintComponent(g);
            Dimension arcs = new Dimension(cornerRadius, cornerRadius);
            int width = getWidth();
            int height = getHeight();
            Graphics2D graphics = (Graphics2D) g;
            graphics.setRenderingHint(RenderingHints.KEY_ANTIALIASING, RenderingHints.VALUE_ANTIALIAS_ON);
            // Draws the rounded panel with borders.
            if (backgroundColor != null) {
                graphics.setColor(backgroundColor);
            } else {
                graphics.setColor(getBackground());
            }
            graphics.fillRoundRect(0, 0, width - 1, height - 1, arcs.width, arcs.height); // paint background
            graphics.setColor(getForeground());
            // graphics.drawRoundRect(0, 0, width-1, height-1, arcs.width, arcs.height);
            // //paint border
            //
        }
    }

}
